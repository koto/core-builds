{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","fn","R3ResolvedDependencyType","_global","getGlobal","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","angularCoreDiEnv","ɵgetFactoryOf","getFactoryOf","typeAny","def","Type","Function","isType","v","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","USE_VALUE","provide","String","useValue","isUseClassProvider","useClass","isUseValueProvider","isUseFactoryProvider","useFactory","isUseExistingProvider","useExisting","USE_VALUE$1","EMPTY_ARRAY","convertInjectableProviderToFactory","provider","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","InjectionToken","_desc","__NG_ELEMENT_ID__","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","Injector","parent","StaticInjector","NULL","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","USE_VALUE$2","NG_TOKEN_PATH","NG_TEMP_TOKEN_PATH","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","Map","set","useNew","recursivelyProcessProviders","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","catchInjectorError","tokens","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","originalError","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","enumerable","configurable","KeyRegistry","_allKeys","has","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","some","_createDependency","paramMetadata","ChangeDetectionStrategy","ChangeDetectorStatus","Query","UNDEFINED","ReflectiveInjector","resolve","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_this","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","selector","data","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","url","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","component","templateUrl","template","styleUrls","styles","styleOffset","styleUrl","style","splice","clearResolutionOfComponentResourcesQueue","Promise","all","ViewEncapsulation","Set","componentNeedsResolution","clear","response","EMPTY_OBJ","EMPTY_ARRAY$1","renderStringify","defaultScheduler","requestAnimationFrame","setTimeout","resolveWindow","element","ownerDocument","defaultView","resolveDocument","resolveBody","body","INTERPOLATION_DELIMITER","isPropMetadataString","str","maybeUnwrapFn","throwError","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","_","setInput","schemas","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","setComponentScope","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","publicName","declaredName","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","CONTENT_QUERIES","DECLARATION_VIEW","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","VIEWS","NATIVE","MONKEY_PATCH_KEY_NAME","unwrapRNode","isLView","isLContainer","getNativeByIndex","lView","getNativeByTNode","tNode","hostView","getTNode","view","loadInternal","getComponentViewByIndex","nodeIndex","slotValue","isComponent","isComponentDef","isRootView","readPatchedData","readPatchedLView","viewAttachedToContainer","resetPreOrderHookFlags","elementDepthCount","NodeInjectorFactory","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","registerPreOrderHooks","directiveIndex","directiveDef","tView","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","firstTemplatePass","directiveStart","end","directiveEnd","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executePreOrderHooks","currentView","checkNoChangesMode","currentNodeIndex","executeHooks","firstPassHooks","checkHooks","initPhaseState","hooksToCall","callHooks","arr","initPhase","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","bindingsEnabled","previousOrParentTNode","isParent","currentDirectiveDef","setCurrentDirectiveDef","enableBindings","disableBindings","getLView","restoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","enterView","newView","hostTNode","oldView","bindingStartIndex","nextContextImpl","level","walkUpViews","nestingLevel","leaveView","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getLContext","mpValue","isComponentInstance","instance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","CorePlayerHandler","_players","flushPlayers","player","state","play","queuePlayer","ANIMATION_PROP_PREFIX","createEmptyStylingContext","wrappedElement","sanitizer","initialStyles","initialClasses","allocateDirectiveIntoContext","directiveRef","dirs","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","hasClassInput","hasStyleInput","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","destroy","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","setUpAttributes","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","setProperty","attrsStylingIndexOf","startIndex","val","isNameOnlyAttributeMarker","marker","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","getLViewParent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","attrsLength","accumulatedClasses","trim","accumulatedStyles","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","getFactoryOf$1","getInheritedFactory","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","_findOriginalError","_findContext","errorLogger","getErrorLogger","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","removeChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","item","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","match","warn","sanitizeSrcset","srcset","split","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","tagName","nodeName","toLowerCase","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","content","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","getSanitizer","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","sanitizeScript","unsafeScript","SCRIPT","getUrlSanitizer","tag","sanitizeUrlOrResourceUrl","defaultStyleSanitizer","isPromise","isObservable","subscribe","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","a","isNaN","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject","throwMultipleComponentError","NO_CHANGE","updateBinding","bindingIndex","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","toDebug","debug","assertDefined","actual","toHtml","includeChildren","isTextNode","textContent","readLViewValue","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","LViewDebug","_raw_lView","__raw__flags__","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","toDebugNodes","debugNodes","tNodeCursor","rawValue","componentLViewDebug","nodes","cleanup","rendererFactory","childHead","childTail","declarationView","queries","tHost","childViews","__other__","LContainerDebug","_raw_lContainer","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","head","projection","head_1","head_1_1","projectionNext","nativeInsertBefore","nativeRemoveNode","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","views","detachView","removeIndex","viewToDetach","removeView","destroyLView","destroyViewTree","rootView","lViewOrLContainer","cleanUpView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","cleanupFn","insertBefore","nativeAppendOrInsertBefore","nativeAppendChild","childEl","childTNode","getRenderParent","getHighestElementOrICUContainer","getHostNative","ShadowDom","Native","anchorNode","getNativeAnchorNode","parentTNode","getBeforeNodeForView","childEl_1","childEl_1_1","containerNative","viewTNode","rNode","isHostElement","nativeParent","nativeRemoveChild","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","BoundPlayerFactory","initializeStaticContext","stylingStartIndex","patchContextWithStaticAttrs","attrsStylingStartIndex","detectedIndex","getDirectiveRegistryValuesIndexOf","attr","patchInitialStylingValue","initialStyling","directiveOwnerIndex","allowValueChange","addOrUpdateStaticStyle","renderInitialClasses","setClass","renderInitialStyles","setStyle","getMatchingBindingIndex","bindingName","start","getProp","patchStylingMapIntoContext","playerBuilderIndex","ctxStart","ctxEnd","cacheValue","entryIsClassBased","cacheIndex","cachedValues","ownershipValuesStartIndex","existingCachedValueCount","valuesEntryShapeChange","totalUniqueValues","totalNewAllocatedSlots","applyAllProps","ctxIndex","totalRemainingProperties","currentProp","normalizedProp","mapProp","hyphenate","currentValue","getValue","currentDirectiveIndex","getDirectiveIndexFromEntry","currentFlag","getPointers","hasValueChanged","setValue","setPlayerBuilderIndex","hasInitialValueChanged","setDirty","getStyleSanitizer","propertiesLoop","isInsideOwnershipArea","distantCtxDirectiveIndex","distantCtxPlayerBuilderIndex","getPlayerBuilderIndex","distantCtxValue","distantCtxFlag","swapMultiContextEntries","insertNewMultiProperty","prepareInitialFlag","ctxValue","ctxFlag","updateCachedMapValue","startPosition","endPosition","totalValues","dirtyFutureValues","nextStartPosition","totalStylingEntries","classCache","diffInStartPosition","setContextDirty","setDirectiveDirty","updateSingleStylingValue","offset","input","isClassBased","forceOverride","getDirectiveIndexFromRegistry","singleIndex","getSinglePropIndexValue","singlePropOffsetRegistryIndex","offsets","currValue","currFlag","currDirective","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setSanitizeFlag","sanitizeYes","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setContextPlayersDirty","store","DashCase","removeStyle","removeProperty","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBasedValue","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiClassesStartIndex","getMultiStylesStartIndex","setProp","builder","insertionIndex","directiveOwnerPointers","playerIndex","getPlayerBuilder","setFlag","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","tmpDirectiveIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","initialIndex","getInitialStylingValuesIndexOf","newValue","initialValue","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","classesStartIndex","registerMultiMapEntry","keyValues","dirtyYes","currentDirectiveOwner","newDirectiveOwner","getInitialClassNameValue","initialClassValues","readCachedMapValue","isMultiValueCacheHit","count","limit","staticStyles","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","readClassValueFromTNode","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","matchingProjectionSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","applyOnCreateInstructions","fns","onElementCreationFns","_CLEAN_PROMISE","refreshDescendantViews","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","setHostBindings","expandoInstructions","expandoStartIndex","currentElementIndex","instruction","providerCount","staticContentQueries","refreshChildComponents","viewAttachedToChangeDetector","syncViewWithBlueprint","componentTView","checkView","directiveDefIdx","createLView","tHostNode","createNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","getRenderFlags","nextContext","renderComponentOrTemplate","templateFn","normalExecutionPath","creationModeIsActive","begin","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementContainerStart","createComment","createDirectivesAndLocals","currentQueries","addNode","clone","executeContentQueries","isContentQueryHost","elementContainerEnd","elementCreate","initialStylesIndex","initialClassesIndex","lastAttrIndex","stylingAttrsStartIndex","getElementDepthCount","increaseElementDepthCount","inputData","initializeTNodeInputs","overriddenRenderer","rendererToUse","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","viewQueryStartIndex","staticViewQueries","pipeRegistry","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","listener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","componentHostSyntheticListener","loadComponentRenderer","loadRendererFn","lCleanupIndex","getCleanup","wrapListener","listen","generatePropertyAliases","propsLength","subscription","idx","decreaseElementDepthCount","setInputsForProperty","getInitialStyleStringValue","initialStyleValues","styleString","flushHooksUpTo","elementAttribute","namespace","element_1","strValue","elementProperty","nativeOnly","elementPropertyInternal","componentHostSyntheticProperty","ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","dataValue","markDirtyIfOnPush","childComponentLView","savePropertyDebugData","lastBindingIndex","bindingMetadata","propertyMetadataStartIndex","propertyMetadataEndIndex","tParent","initialInputs","tViews","privateName","direction","propStore","isInput","defs","propertyAliasMap","internalName","elementStyling","classBindingNames","styleBindingNames","styleSanitizer","initElementStyling","updateContextWithBindings","findOrPatchDirectiveIntoRegistry","directiveRefs","nextOffsetInsertionIndex","hyphenateEntries","entries","newEntries","singlePropOffsetValues","totalCurrentClassBindings","totalCurrentStyleBindings","cachedClassMapValues","cachedStyleMapValues","stylesOffset","singleClassesStartIndex","multiStylesStartIndex","multiClassesStartIndex","currentSinglePropsLength","insertionOffset","filteredStyleBindingNames","i_1","name_1","singlePropIndex","filteredClassBindingNames","i_2","name_2","totalStyles","totalClasses","totalNewEntries","i_3","isMultiBased","singleOrMultiIndex","i_4","i_5","i_6","multiIndex","initialValuesToLookup","indexForInitial","initialFlag","newStylesSpaceAllocationSize","newClassesSpaceAllocationSize","cachedStyleMapIndex","i_7","cachedClassMapIndex","i_8","elementHostAttrs","elementStylingApply","renderStyling","rootOrView","classesStore","stylesStore","totalPlayersQueued","targetDirectiveIndex","isContextDirty","isDirectiveDirty","flushPlayerBuilders","multiStartIndex","stillDirty","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","updateStyleProp","elementClassProp","classIndex","booleanOrNull","updateClassProp","elementStylingMap","classes","classInputVal","forceClassesAsString","styleInputVal","forceStylesAsString","updateStylingMap","classesInput","stylesInput","ignoreAllClassUpdates","ignoreAllStyleUpdates","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","classNames","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","multiClassesEndIndex","textNative","textBinding","element_2","previousExpandoLength","directiveCount","elementIndex","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","tContainerNode","containerInternal","addTContainerToQueries","comment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","projectionDef","componentNode","projectionHeads","tails","componentChild","bucketIndex","selectorIndex","appendProjectedNodes","projectedView","nodeToProject","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","markViewDirty","preventDefault","returnValue","parent_2","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChangesInternal","detectChangesInRootView","hostTView","executeViewQueryFn","markDirty","storeBindingMetadata","allocHostVars","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","interpolationV","interpolation1","prefix","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextLView","load","directiveInject","injectAttribute","CLEAN_PROMISE","getCurrentView","getTViewCleanup","errorHandler","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext","getViewComponent","loadLContext","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","getListeners","listeners","firstParam","secondParam","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","firstChange","isFirstChange","NgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","InheritDefinitionFeature","superType","getSuperType","_loop_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","rf","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","features_1","features_1_1","superPrototype","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$2","NULL_INJECTOR$1","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","_destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","imported","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multiRecord_1","hasOnDestroy","paramLength","isExistingProvider","isFactoryProvider","classRef_1","ngModuleDetail","hasDeps","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_hostLContainer","_injectorIndex","createEmbeddedView","createEmbeddedViewAndNode","viewRef","hostContainer","createViewRef","componentIndex","hostComponentView","noop","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","delete","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","scope","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","pop","EMPTY_CONTEXT","getComponentViewDefinitionFactory","componentFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ViewContainerRef_","_data","templateRef","insert","createComponent","ngModuleRef","contextInjector","parentInjector","componentRef","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","array","nonMinified","ROOT_CONTEXT","SCHEDULER","isBoundToModule","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","_rootLView","destroyCbs","ELEMENT_MARKER","COMMENT_MARKER","addAllToArray","items","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","pos","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","i18nVarsCount","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","tIcuIndex","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","icus","appendI18nNode","previousTNode","cursor","i18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders_1","placeholder","templateId","isCloseTemplateTag","currentTemplateId","placeholders","_idx","list","shift","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","opCode","textRNode","destinationNodeIndex","elementNodeIndex","commentValue","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","i18n","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","max","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","ngDevMode","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","_r3Injector","NgModuleFactory$1","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","unwrapValue$1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","QueryList","_results","filter","reduce","init","toArray","reset","flatten","flat","flatItem","last","notifyOnChanges","LQueries_","shallow","deep","track","queryList","predicate","descend","read","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","removeView$1","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","_static","storeCleanupWithContext","queryRefresh","queryListImpl","staticViewQuery","loadViewQuery","contentQuery","tViewContentQueries","staticContentQuery","loadContentQuery","templateRefExtractor","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵallocHostVars","ɵelementStart","ɵelementEnd","ɵelement","ɵelementContainerStart","ɵelementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵcomponentHostSyntheticProperty","ɵcomponentHostSyntheticListener","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵqueryRefresh","ɵviewQuery","ɵstaticViewQuery","ɵstaticContentQuery","ɵloadViewQuery","ɵcontentQuery","ɵloadContentQuery","ɵreference","ɵelementStyling","ɵelementHostAttrs","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵflushHooksUpTo","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18n","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵi18nPostprocess","ɵresolveWindow","ɵresolveDocument","ɵresolveBody","ɵsetComponentScope","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","ɵsanitizeUrl","ɵsanitizeUrlOrResourceUrl","NgModuleFactoryLoader","assertSameOrNotExisting","incoming","getModuleFactory__PRE_R3__","noModuleError","getModuleFactory","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","flatten$1","expandModuleWithProviders","emitInline","registerNgModuleType","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","mapFn","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","interpolation","hasSelectorScope","compileDirective","sourceMapUrl","facade","extendsDirectlyFromObject","typeArgumentCount","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","usesInheritance","part","viewQueries","isQueryAnn","queriesMeta","field","annotations_1","ann","isInputAnn","convertToR3QueryMetadata","splitByComma","piece","static","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","isBoundToModule__PRE_R3__","cf","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","getFirstBindingIndex","metadataIndex","currentBindingIndex","metadataParts","hostProperties","collectHostPropertyBindings","hostPropIndex","eAttrs","lContext","eClasses","classList","eStyles","getPropertyValue","children","getDebugNode__POST_R3__","_queryNodeChildrenR3","elementsOnly","_nativeNodeToDebugNode","getDebugNode","getDebugNode__PRE_R3__","indexDebugNode","MissingTranslationStrategy","DebugNode","DebugElement","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","ViewAction","ApplicationModule","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","ɵangular_packages_core_core_r","ɵangular_packages_core_core_o","ɵangular_packages_core_core_p","ɵangular_packages_core_core_q","ɵangular_packages_core_core_s","ɵangular_packages_core_core_f","ɵangular_packages_core_core_m","ɵangular_packages_core_core_n","ɵangular_packages_core_core_l","ɵangular_packages_core_core_k","ɵangular_packages_core_core_a","ɵangular_packages_core_core_b","ɵangular_packages_core_core_c","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_j","ɵangular_packages_core_core_t","ɵangular_packages_core_core_v","ɵangular_packages_core_core_u","ɵangular_packages_core_core_y","ɵangular_packages_core_core_w","ɵangular_packages_core_core_x","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_be","ɵangular_packages_core_core_bf","ɵangular_packages_core_core_bj","ɵangular_packages_core_core_bo","ɵangular_packages_core_core_bn","ɵangular_packages_core_core_g","ɵangular_packages_core_core_h","ɵangular_packages_core_core_i","ɵangular_packages_core_core_bh","ɵangular_packages_core_core_bk","ɵangular_packages_core_core_bl","ɵangular_packages_core_core_bp","ɵangular_packages_core_core_z","ɵangular_packages_core_core_ba","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵinject","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵsetClassMetadata","setClassMetadata","clazz","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","ɵisBoundToModule__POST_R3__","isBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","compilerMeta","ctorDeps","userDeps","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","adjustedIdx","_adjustIndex","commentNode","nativeNextSibling","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","ɵgetModuleFactory__POST_R3__","getModuleFactory__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v0.0.0\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getGlobal() {\n        var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n        var __window = typeof window !== 'undefined' && window;\n        var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n            self instanceof WorkerGlobalScope && self;\n        var __global = typeof global !== 'undefined' && global;\n        // Always use __globalThis if available, which is the spec-defined global variable across all\n        // environments, then fallback to __global first, because in Node tests both __global and\n        // __window may be defined and _global should be __global in that case.\n        return __globalThis || __global || __window || __self;\n    }\n    var _global = getGlobal();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'inject': inject,\n        'ɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined,\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var ɵ0 = getClosureSafeProperty;\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ0 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$1 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$1 });\n    var EMPTY_ARRAY = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE$2 in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE$2 in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.template) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        componentResourceResolutionQueue.clear();\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY$1 = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY_OBJ);\n        Object.freeze(EMPTY_ARRAY$1);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    /**\n     * Used for stringify render output in Ivy.\n     */\n    function renderStringify(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        if (typeof value == 'object' && typeof value.type == 'function')\n            return value.type.name || value.type;\n        return '' + value;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    function resolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    function resolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    function resolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Determines whether or not the given string is a property metadata string.\n     * See storeBindingMetadata().\n     */\n    function isPropMetadataString(str) {\n        return str.indexOf(INTERPOLATION_DELIMITER) >= 0;\n    }\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node.constructor.name === 'WebWorkerRenderNode'), true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY$1,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function setComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY$1,\n            declarations: def.declarations || EMPTY_ARRAY$1,\n            imports: def.imports || EMPTY_ARRAY$1,\n            exports: def.exports || EMPTY_ARRAY$1,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 20;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT, NEXT, and QUERIES are indices 3, 4, and 5.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var VIEWS = 6;\n    var NATIVE = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`,\n     * `StylingContext`) in same location in `LView`. This is because we don't want to pre-allocate\n     * space for it because the storage is sparse. This file contains utilities for dealing with such\n     * data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === 'number'` => `StylingContext`\n     *      - This happens when we have style/class binding at a given location.\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * True if `value` is `LView`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    /**\n     * True if `value` is `StylingContext`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isStylingContext(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'number';\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return unwrapRNode(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the flushHooksUpTo instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes necessary hooks at the start of executing a template.\n     *\n     * Executes hooks that are to be run during the initialization of a directive such\n     * as `onChanges`, `onInit`, and `doCheck`.\n     *\n     * @param lView The current view\n     * @param tView Static data for the view containing the hooks to be executed\n     * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n     * @param @param currentNodeIndex 2 cases depending the the value:\n     * - undefined: execute hooks only from the saved index until the end of the array (pre-order case,\n     * when flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing flushHooksUpTo(number))\n     */\n    function executePreOrderHooks(currentView, tView, checkNoChangesMode, currentNodeIndex) {\n        if (!checkNoChangesMode) {\n            executeHooks(currentView, tView.preOrderHooks, tView.preOrderCheckHooks, checkNoChangesMode, 0 /* OnInitHooksToBeRun */, currentNodeIndex !== undefined ? currentNodeIndex : null);\n        }\n    }\n    /**\n     * Executes hooks against the given `LView` based off of whether or not\n     * This is the first pass.\n     *\n     * @param currentView The view instance data to run the hooks against\n     * @param firstPassHooks An array of hooks to run if we're in the first view pass\n     * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n     * @param checkNoChangesMode Whether or not we're in no changes mode.\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing flushHooksUpTo(number))\n     */\n    function executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode, initPhaseState, currentNodeIndex) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState ?\n            firstPassHooks :\n            checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall, initPhaseState, currentNodeIndex);\n        }\n        // The init phase state must be always checked here as it may have been recursively updated\n        if (currentNodeIndex == null &&\n            (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState &&\n            initPhaseState !== 3 /* InitPhaseCompleted */) {\n            currentView[FLAGS] &= 1023 /* IndexWithinInitPhaseReset */;\n            currentView[FLAGS] += 1 /* InitPhaseStateIncrementer */;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing flushHooksUpTo(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     */\n    function leaveView(newView) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        else {\n            try {\n                resetPreOrderHookFlags(lView);\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode, 2 /* AfterViewInitHooksToBeRun */, undefined);\n            }\n            finally {\n                // Views are clean and in update mode after being checked, so these bits are cleared\n                lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n                lView[BINDING_INDEX] = tView.bindingStartIndex;\n            }\n        }\n        enterView(newView, null);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY$1;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(wrappedElement, sanitizer, initialStyles, initialClasses) {\n        var context = [\n            wrappedElement || null,\n            0,\n            [],\n            initialStyles || [null, null],\n            initialClasses || [null, null],\n            [0, 0],\n            [0],\n            [0],\n            null,\n        ];\n        // whenever a context is created there is always a `null` directive\n        // that is registered (which is a placeholder for the \"template\").\n        allocateDirectiveIntoContext(context, null);\n        return context;\n    }\n    /**\n     * Allocates (registers) a directive into the directive registry within the provided styling\n     * context.\n     *\n     * For each and every `[style]`, `[style.prop]`, `[class]`, `[class.name]` binding\n     * (as well as static style and class attributes) a directive, component or template\n     * is marked as the owner. When an owner is determined (this happens when the template\n     * is first passed over) the directive owner is allocated into the styling context. When\n     * this happens, each owner gets its own index value. This then ensures that once any\n     * style and/or class binding are assigned into the context then they are marked to\n     * that directive's index value.\n     *\n     * @param context the target StylingContext\n     * @param directiveRef the directive that will be allocated into the context\n     * @returns the index where the directive was inserted into\n     */\n    function allocateDirectiveIntoContext(context, directiveRef) {\n        // this is a new directive which we have not seen yet.\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var i = dirs.length;\n        // we preemptively make space into the directives array and then\n        // assign values slot-by-slot to ensure that if the directive ordering\n        // changes then it will still function\n        dirs.push(null, null, null, null);\n        dirs[i + 0 /* DirectiveValueOffset */] = directiveRef;\n        dirs[i + 2 /* DirtyFlagOffset */] = false;\n        dirs[i + 3 /* StyleSanitizerOffset */] = null;\n        // -1 is used to signal that the directive has been allocated, but\n        // no actual style or class bindings have been registered yet...\n        dirs[i + 1 /* SinglePropValuesIndexOffset */] = -1;\n        return i;\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        // the HEADER values contain arrays which also need\n        // to be copied over into the new context\n        for (var i = 0; i < 9 /* SingleStylesStartPosition */; i++) {\n            var value = templateStyleContext[i];\n            if (Array.isArray(value)) {\n                context[i] = value.slice();\n            }\n        }\n        context[0 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[1 /* MasterFlagPosition */] |= 16 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 8 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 16 /* hasStyleInput */) !== 0;\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str += (i ? ';' : '') + (prop + \":\" + styles[prop]);\n            }\n        }\n        return str;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[8 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[8 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     *\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                /// attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n                    // Standard attributes\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\n                    if (isAnimationProp(attrName)) {\n                        if (isProc) {\n                            renderer.setProperty(native, attrName, attrVal);\n                        }\n                    }\n                    else {\n                        isProc ?\n                            renderer\n                                .setAttribute(native, attrName, attrVal) :\n                            native.setAttribute(attrName, attrVal);\n                    }\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    function attrsStylingIndexOf(attrs, startIndex) {\n        for (var i = startIndex; i < attrs.length; i++) {\n            var val = attrs[i];\n            if (val === 1 /* Classes */ || val === 2 /* Styles */) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings` or `Template`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    if (value === 1 /* Classes */ && attrNameToInject === 'class') {\n                        var accumulatedClasses = '';\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            accumulatedClasses += ' ' + attrs[i++];\n                        }\n                        return accumulatedClasses.trim();\n                    }\n                    else if (value === 2 /* Styles */ && attrNameToInject === 'style') {\n                        var accumulatedStyles = '';\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            accumulatedStyles += attrs[i++] + \": \" + attrs[i++] + \"; \";\n                        }\n                        return accumulatedStyles.trim();\n                    }\n                    else {\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            i++;\n                        }\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + renderStringify(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + renderStringify(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n        var tView = lView[TVIEW];\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + renderStringify(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf$1(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf$1(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return sanitizeResourceUrl;\n        }\n        return sanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     */\n    function sanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'list-style' || prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (isDifferent(oldValue, value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n        return false;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    function attachLViewDebug(lView) {\n        lView.debug = new LViewDebug(lView);\n    }\n    function attachLContainerDebug(lContainer) {\n        lContainer.debug = new LContainerDebug(lContainer);\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = node.innerHTML;\n                return outerHTML.split(innerHTML)[0] || null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"__other__\", {\n            /**\n             * Additional information which is hidden behind a property. The extra level of indirection is\n             * done so that the debug view would not be cluttered with properties which are only rarely\n             * relevant to the developer.\n             */\n            get: function () {\n                return {\n                    tView: this._raw_lView[TVIEW],\n                    cleanup: this._raw_lView[CLEANUP],\n                    injector: this._raw_lView[INJECTOR$1],\n                    rendererFactory: this._raw_lView[RENDERER_FACTORY],\n                    renderer: this._raw_lView[RENDERER],\n                    sanitizer: this._raw_lView[SANITIZER],\n                    childHead: toDebug(this._raw_lView[CHILD_HEAD]),\n                    next: toDebug(this._raw_lView[NEXT]),\n                    childTail: toDebug(this._raw_lView[CHILD_TAIL]),\n                    declarationView: toDebug(this._raw_lView[DECLARATION_VIEW]),\n                    contentQueries: this._raw_lView[CONTENT_QUERIES],\n                    queries: this._raw_lView[QUERIES],\n                    tHost: this._raw_lView[T_HOST],\n                    bindingIndex: this._raw_lView[BINDING_INDEX],\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.__other__.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.__other__.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                var rawValue = lView[tNode.index];\n                var native = unwrapRNode(rawValue);\n                var componentLViewDebug = toDebug(readLViewValue(rawValue));\n                debugNodes.push({\n                    html: toHtml(native),\n                    native: native,\n                    nodes: toDebugNodes(tNode.child, lView),\n                    component: componentLViewDebug\n                });\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer[VIEWS].map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lContainer[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"__other__\", {\n            get: function () {\n                return {\n                    next: toDebug(this._raw_lContainer[NEXT]),\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var e_1, _a;\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), tNode, beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], tNode, beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], tNode, beforeNode);\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[T_HOST];\n                var head = componentHost.projection[tNode.projection];\n                if (Array.isArray(head)) {\n                    try {\n                        for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                            var nativeNode = head_1_1.value;\n                            executeNodeAction(action, renderer, renderParent, nativeNode, tNode, beforeNode);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    // Must store both the TNode and the view because this projection node could be nested\n                    // deeply inside embedded views, and we need to get back down to this particular nested\n                    // view.\n                    projectionNodeStack[++projectionNodeIndex] = tNode;\n                    projectionNodeStack[++projectionNodeIndex] = currentView;\n                    if (head) {\n                        currentView = componentView[PARENT];\n                        nextTNode = currentView[TVIEW].data[head.index];\n                    }\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.projectionNext === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = (tNode.flags & 2 /* isProjected */) ? tNode.projectionNext : tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[T_HOST];\n                    if (tNode === null || tNode === rootTNode)\n                        return;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = getLViewParent(currentView);\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */) {\n                        /**\n                         * If current lView doesn't have next pointer, we try to find it by going up parents\n                         * chain until:\n                         * - we find an lView with a next pointer\n                         * - or find a tNode with a parent that has a next pointer\n                         * - or reach root TNode (in which case we exit, since we traversed all nodes)\n                         */\n                        while (!currentView[NEXT] && currentView[PARENT] &&\n                            !(tNode.parent && tNode.parent.next)) {\n                            if (tNode === rootTNode)\n                                return;\n                            currentView = currentView[PARENT];\n                            tNode = currentView[T_HOST];\n                        }\n                        if (currentView[NEXT]) {\n                            currentView = currentView[NEXT];\n                            nextTNode = currentView[T_HOST];\n                        }\n                        else {\n                            nextTNode = tNode.next;\n                        }\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, tNode, beforeNode) {\n        if (action === 0 /* Insert */) {\n            nativeInsertBefore(renderer, parent, node, beforeNode || null);\n        }\n        else if (action === 1 /* Detach */) {\n            nativeRemoveNode(renderer, node, isComponent(tNode));\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        walkTNodeTree(lView, 1 /* Detach */, lView[RENDERER], null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var views = lViewOrLContainer[VIEWS];\n                if (views.length > 0)\n                    next = views[0];\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var views = lContainer[VIEWS];\n        ngDevMode && assertDefined(views, 'Container must have views');\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        addRemoveViewFromContainer(viewToDetach, false);\n        if ((viewToDetach[FLAGS] & 128 /* Attached */) &&\n            !(viewToDetach[FLAGS] & 256 /* Destroyed */) && viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[PARENT] = null;\n        viewToDetach[NEXT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~128 /* Attached */;\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex);\n        destroyLView(view);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        if (!(view[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = view[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n            }\n            destroyViewTree(view);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            // For embedded views still attached to a container: remove query result from this view.\n            if (viewAttachedToContainer(view) && view[QUERIES]) {\n                view[QUERIES].removeView();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // DOM listener\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else if (typeof tCleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = lCleanup[tCleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode).parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (parent == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            ngDevMode && assertNodeType(parent, 3 /* Element */);\n            if (parent.flags & 1 /* isComponent */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parent.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parent, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            var views = lContainer[VIEWS];\n            var index = views.indexOf(lView);\n            return getBeforeNodeForView(index, views, lContainer[NATIVE]);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var e_2, _a;\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                try {\n                    for (var childEl_1 = __values(childEl), childEl_1_1 = childEl_1.next(); !childEl_1_1.done; childEl_1_1 = childEl_1.next()) {\n                        var nativeNode = childEl_1_1.value;\n                        nativeAppendOrInsertBefore(renderer, renderParent, nativeNode, anchorNode);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (childEl_1_1 && !childEl_1_1.done && (_a = childEl_1.return)) _a.call(childEl_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[T_HOST];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Appends nodes to a target projection place. Nodes to insert were previously re-distribution and\n     * stored on a component host level.\n     * @param lView A LView where nodes are inserted (target VLview)\n     * @param tProjectionNode A projection node where previously re-distribution should be appended\n     * (target insertion place)\n     * @param selectorIndex A bucket from where nodes to project should be taken\n     * @param componentView A where projectable nodes were initially created (source view)\n     */\n    function appendProjectedNodes(lView, tProjectionNode, selectorIndex, componentView) {\n        var projectedView = componentView[PARENT];\n        var componentNode = componentView[T_HOST];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        if (Array.isArray(nodeToProject)) {\n            appendChild(nodeToProject, tProjectionNode, lView);\n        }\n        else {\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    appendProjectedNodes(lView, tProjectionNode, nodeToProject.projection, findComponentView(projectedView));\n                }\n                else {\n                    // This flag must be set now or we won't know that this node is projected\n                    // if the nodes are inserted into a container later.\n                    nodeToProject.flags |= 2 /* isProjected */;\n                    appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n                }\n                nodeToProject = nodeToProject.projectionNext;\n            }\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    /**\n     * This file includes the code to power all styling-binding operations in Angular.\n     *\n     * These include:\n     * [style]=\"myStyleObj\"\n     * [class]=\"myClassObj\"\n     * [style.prop]=\"myPropValue\"\n     * [class.name]=\"myClassValue\"\n     *\n     * It also includes code that will allow style binding code to operate within host\n     * bindings for components/directives.\n     *\n     * There are many different ways in which these functions below are called. Please see\n     * `render3/interfaces/styling.ts` to get a better idea of how the styling algorithm works.\n     */\n    /**\n     * Creates a new StylingContext an fills it with the provided static styling attribute values.\n     */\n    function initializeStaticContext(attrs, stylingStartIndex, directiveRef) {\n        var context = createEmptyStylingContext();\n        patchContextWithStaticAttrs(context, attrs, stylingStartIndex, directiveRef);\n        return context;\n    }\n    /**\n     * Designed to update an existing styling context with new static styling\n     * data (classes and styles).\n     *\n     * @param context the existing styling context\n     * @param attrs an array of new static styling attributes that will be\n     *              assigned to the context\n     * @param attrsStylingStartIndex what index to start iterating within the\n     *              provided `attrs` array to start reading style and class values\n     * @param directiveRef the directive instance with which static data is associated with.\n     */\n    function patchContextWithStaticAttrs(context, attrs, attrsStylingStartIndex, directiveRef) {\n        // this means the context has already been set and instantiated\n        if (context[1 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        // If the styling context has already been patched with the given directive's bindings,\n        // then there is no point in doing it again. The reason why this may happen (the directive\n        // styling being patched twice) is because the `stylingBinding` function is called each time\n        // an element is created (both within a template function and within directive host bindings).\n        var directives = context[2 /* DirectiveRegistryPosition */];\n        var detectedIndex = getDirectiveRegistryValuesIndexOf(directives, directiveRef || null);\n        if (detectedIndex === -1) {\n            // this is a new directive which we have not seen yet.\n            detectedIndex = allocateDirectiveIntoContext(context, directiveRef);\n        }\n        var directiveIndex = detectedIndex / 4 /* Size */;\n        var initialClasses = null;\n        var initialStyles = null;\n        var mode = -1;\n        for (var i = attrsStylingStartIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                initialClasses = initialClasses || context[4 /* InitialClassValuesPosition */];\n                patchInitialStylingValue(initialClasses, attr, true, directiveIndex);\n            }\n            else if (mode == 2 /* Styles */) {\n                initialStyles = initialStyles || context[3 /* InitialStyleValuesPosition */];\n                patchInitialStylingValue(initialStyles, attr, attrs[++i], directiveIndex);\n            }\n        }\n    }\n    /**\n     * Designed to add a style or class value into the existing set of initial styles.\n     *\n     * The function will search and figure out if a style/class value is already present\n     * within the provided initial styling array. If and when a style/class value is\n     * present (allocated) then the code below will set the new value depending on the\n     * following cases:\n     *\n     *  1) if the existing value is falsy (this happens because a `[class.prop]` or\n     *     `[style.prop]` binding was set, but there wasn't a matching static style\n     *     or class present on the context)\n     *  2) if the value was set already by the template, component or directive, but the\n     *     new value is set on a higher level (i.e. a sub component which extends a parent\n     *     component sets its value after the parent has already set the same one)\n     *  3) if the same directive provides a new set of styling values to set\n     *\n     * @param initialStyling the initial styling array where the new styling entry will be added to\n     * @param prop the property value of the new entry (e.g. `width` (styles) or `foo` (classes))\n     * @param value the styling value of the new entry (e.g. `absolute` (styles) or `true` (classes))\n     * @param directiveOwnerIndex the directive owner index value of the styling source responsible\n     *        for these styles (see `interfaces/styling.ts#directives` for more info)\n     */\n    function patchInitialStylingValue(initialStyling, prop, value, directiveOwnerIndex) {\n        for (var i = 2 /* KeyValueStartPosition */; i < initialStyling.length; i += 3 /* Size */) {\n            var key = initialStyling[i + 0 /* PropOffset */];\n            if (key === prop) {\n                var existingValue = initialStyling[i + 1 /* ValueOffset */];\n                var existingOwner = initialStyling[i + 2 /* DirectiveOwnerOffset */];\n                if (allowValueChange(existingValue, value, existingOwner, directiveOwnerIndex)) {\n                    addOrUpdateStaticStyle(i, initialStyling, prop, value, directiveOwnerIndex);\n                }\n                return;\n            }\n        }\n        // We did not find existing key, add a new one.\n        addOrUpdateStaticStyle(null, initialStyling, prop, value, directiveOwnerIndex);\n    }\n    /**\n     * Runs through the initial class values present in the provided\n     * context and renders them via the provided renderer on the element.\n     *\n     * @param element the element the styling will be applied to\n     * @param context the source styling context which contains the initial class values\n     * @param renderer the renderer instance that will be used to apply the class\n     * @returns the index that the classes were applied up until\n     */\n    function renderInitialClasses(element, context, renderer, startIndex) {\n        var initialClasses = context[4 /* InitialClassValuesPosition */];\n        var i = startIndex || 2 /* KeyValueStartPosition */;\n        while (i < initialClasses.length) {\n            var value = initialClasses[i + 1 /* ValueOffset */];\n            if (value) {\n                setClass(element, initialClasses[i + 0 /* PropOffset */], true, renderer, null);\n            }\n            i += 3 /* Size */;\n        }\n        return i;\n    }\n    /**\n     * Runs through the initial styles values present in the provided\n     * context and renders them via the provided renderer on the element.\n     *\n     * @param element the element the styling will be applied to\n     * @param context the source styling context which contains the initial class values\n     * @param renderer the renderer instance that will be used to apply the class\n     * @returns the index that the styles were applied up until\n     */\n    function renderInitialStyles(element, context, renderer, startIndex) {\n        var initialStyles = context[3 /* InitialStyleValuesPosition */];\n        var i = startIndex || 2 /* KeyValueStartPosition */;\n        while (i < initialStyles.length) {\n            var value = initialStyles[i + 1 /* ValueOffset */];\n            if (value) {\n                setStyle(element, initialStyles[i + 0 /* PropOffset */], value, renderer, null);\n            }\n            i += 3 /* Size */;\n        }\n        return i;\n    }\n    /**\n     * Adds in new binding values to a styling context.\n     *\n     * If a directive value is provided then all provided class/style binding names will\n     * reference the provided directive.\n     *\n     * @param context the existing styling context\n     * @param directiveRef the directive that the new bindings will reference\n     * @param classBindingNames an array of class binding names that will be added to the context\n     * @param styleBindingNames an array of style binding names that will be added to the context\n     * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n     *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n     *    instance will only be active if and when the directive updates the bindings that it owns.\n     */\n    function updateContextWithBindings(context, directiveRef, classBindingNames, styleBindingNames, styleSanitizer) {\n        if (context[1 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        // this means the context has already been patched with the directive's bindings\n        var directiveIndex = findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer);\n        if (directiveIndex === -1) {\n            // this means the directive has already been patched in ... No point in doing anything\n            return;\n        }\n        if (styleBindingNames) {\n            styleBindingNames = hyphenateEntries(styleBindingNames);\n        }\n        // there are alot of variables being used below to track where in the context the new\n        // binding values will be placed. Because the context consists of multiple types of\n        // entries (single classes/styles and multi classes/styles) alot of the index positions\n        // need to be computed ahead of time and the context needs to be extended before the values\n        // are inserted in.\n        var singlePropOffsetValues = context[5 /* SinglePropOffsetPositions */];\n        var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n        var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n        var cachedClassMapValues = context[6 /* CachedMultiClasses */];\n        var cachedStyleMapValues = context[7 /* CachedMultiStyles */];\n        var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n        var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n        var singleStylesStartIndex = 9 /* SingleStylesStartPosition */;\n        var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n        var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n        var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n        // because we're inserting more bindings into the context, this means that the\n        // binding values need to be referenced the singlePropOffsetValues array so that\n        // the template/directive can easily find them inside of the `elementStyleProp`\n        // and the `elementClassProp` functions without iterating through the entire context.\n        // The first step to setting up these reference points is to mark how many bindings\n        // are being added. Even if these bindings already exist in the context, the directive\n        // or template code will still call them unknowingly. Therefore the total values need\n        // to be registered so that we know how many bindings are assigned to each directive.\n        var currentSinglePropsLength = singlePropOffsetValues.length;\n        singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n        // the code below will check to see if a new style binding already exists in the context\n        // if so then there is no point in inserting it into the context again. Whether or not it\n        // exists the styling offset code will now know exactly where it is\n        var insertionOffset = 0;\n        var filteredStyleBindingNames = [];\n        if (styleBindingNames && styleBindingNames.length) {\n            for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n                var name_1 = styleBindingNames[i_1];\n                var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = singleClassesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredStyleBindingNames.push(name_1);\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // just like with the style binding loop above, the new class bindings get the same treatment...\n        var filteredClassBindingNames = [];\n        if (classBindingNames && classBindingNames.length) {\n            for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n                var name_2 = classBindingNames[i_2];\n                var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = multiStylesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredClassBindingNames.push(name_2);\n                }\n                else {\n                    singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // because new styles are being inserted, this means the existing collection of style offset\n        // index values are incorrect (they point to the wrong values). The code below will run through\n        // the entire offset array and update the existing set of index values to point to their new\n        // locations while taking the new binding values into consideration.\n        var i = 2 /* ValueStartPosition */;\n        if (filteredStyleBindingNames.length) {\n            while (i < currentSinglePropsLength) {\n                var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n                var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n                if (totalClasses) {\n                    var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                    for (var j = start; j < start + totalClasses; j++) {\n                        singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                    }\n                }\n                var total = totalStyles + totalClasses;\n                i += 2 /* ValueStartPosition */ + total;\n            }\n        }\n        var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n        // in the event that there are new style values being inserted, all existing class and style\n        // bindings need to have their pointer values offsetted with the new amount of space that is\n        // used for the new style/class bindings.\n        for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n            var isMultiBased = i_3 >= multiStylesStartIndex;\n            var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n            var flag = getPointers(context, i_3);\n            var staticIndex = getInitialIndex(flag);\n            var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n            if (isMultiBased) {\n                singleOrMultiIndex +=\n                    isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n            }\n            else {\n                singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                    ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n            }\n            setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n        }\n        // this is where we make space in the context for the new style bindings\n        for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n            context.splice(multiClassesStartIndex, 0, null);\n            context.splice(singleClassesStartIndex, 0, null);\n            singleClassesStartIndex++;\n            multiStylesStartIndex++;\n            multiClassesStartIndex += 2; // both single + multi slots were inserted\n        }\n        // this is where we make space in the context for the new class bindings\n        for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n            context.splice(multiStylesStartIndex, 0, null);\n            context.push(null);\n            multiStylesStartIndex++;\n            multiClassesStartIndex++;\n        }\n        var initialClasses = context[4 /* InitialClassValuesPosition */];\n        var initialStyles = context[3 /* InitialStyleValuesPosition */];\n        // the code below will insert each new entry into the context and assign the appropriate\n        // flags and index values to them. It's important this runs at the end of this function\n        // because the context, property offset and index values have all been computed just before.\n        for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n            var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n            var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n            var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                filteredStyleBindingNames[adjustedIndex];\n            var multiIndex = void 0, singleIndex = void 0;\n            if (entryIsClassBased) {\n                multiIndex = multiClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            }\n            else {\n                multiIndex =\n                    multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleStylesStartIndex +\n                    ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            }\n            // if a property is not found in the initial style values list then it\n            // is ALWAYS added in case a follow-up directive introduces the same initial\n            // style/class value later on.\n            var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n            var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n            if (indexForInitial === -1) {\n                indexForInitial = addOrUpdateStaticStyle(null, initialValuesToLookup, propName, entryIsClassBased ? false : null, directiveIndex) +\n                    1 /* ValueOffset */;\n            }\n            else {\n                indexForInitial += 1 /* ValueOffset */;\n            }\n            var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n            setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n            setProp(context, singleIndex, propName);\n            setValue(context, singleIndex, null);\n            setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n            setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n            setProp(context, multiIndex, propName);\n            setValue(context, multiIndex, null);\n            setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n        }\n        // the total classes/style values are updated so the next time the context is patched\n        // additional style/class bindings from another directive then it knows exactly where\n        // to insert them in the context\n        singlePropOffsetValues[1 /* ClassesCountPosition */] =\n            totalCurrentClassBindings + filteredClassBindingNames.length;\n        singlePropOffsetValues[0 /* StylesCountPosition */] =\n            totalCurrentStyleBindings + filteredStyleBindingNames.length;\n        // the map-based values also need to know how many entries got inserted\n        cachedClassMapValues[0 /* EntriesCountPosition */] +=\n            filteredClassBindingNames.length;\n        cachedStyleMapValues[0 /* EntriesCountPosition */] +=\n            filteredStyleBindingNames.length;\n        var newStylesSpaceAllocationSize = filteredStyleBindingNames.length * 4 /* Size */;\n        var newClassesSpaceAllocationSize = filteredClassBindingNames.length * 4 /* Size */;\n        // update the multi styles cache with a reference for the directive that was just inserted\n        var directiveMultiStylesStartIndex = multiStylesStartIndex + totalCurrentStyleBindings * 4 /* Size */;\n        var cachedStyleMapIndex = cachedStyleMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, false, directiveMultiStylesStartIndex, filteredStyleBindingNames.length);\n        for (var i_7 = 1 /* ValuesStartPosition */; i_7 < cachedStyleMapIndex; i_7 += 4 /* Size */) {\n            // multi values start after all the single values (which is also where classes are) in the\n            // context therefore the new class allocation size should be taken into account\n            cachedStyleMapValues[i_7 + 1 /* PositionStartOffset */] +=\n                newClassesSpaceAllocationSize + newStylesSpaceAllocationSize;\n        }\n        // update the multi classes cache with a reference for the directive that was just inserted\n        var directiveMultiClassesStartIndex = multiClassesStartIndex + totalCurrentClassBindings * 4 /* Size */;\n        var cachedClassMapIndex = cachedClassMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, true, directiveMultiClassesStartIndex, filteredClassBindingNames.length);\n        for (var i_8 = 1 /* ValuesStartPosition */; i_8 < cachedClassMapIndex; i_8 += 4 /* Size */) {\n            // the reason why both the styles + classes space is allocated to the existing offsets is\n            // because the styles show up before the classes in the context and any new inserted\n            // styles will offset any existing class entries in the context (even if there are no\n            // new class entries added) also the reason why it's *2 is because both single + multi\n            // entries for each new style have been added in the context before the multi class values\n            // actually start\n            cachedClassMapValues[i_8 + 1 /* PositionStartOffset */] +=\n                (newStylesSpaceAllocationSize * 2) + newClassesSpaceAllocationSize;\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStylesStartIndex);\n        setFlag(context, 1 /* MasterFlagPosition */, masterFlag);\n    }\n    /**\n     * Searches through the existing registry of directives\n     */\n    function findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer) {\n        var directiveRefs = context[2 /* DirectiveRegistryPosition */];\n        var nextOffsetInsertionIndex = context[5 /* SinglePropOffsetPositions */].length;\n        var directiveIndex;\n        var detectedIndex = getDirectiveRegistryValuesIndexOf(directiveRefs, directiveRef);\n        if (detectedIndex === -1) {\n            detectedIndex = directiveRefs.length;\n            directiveIndex = directiveRefs.length / 4 /* Size */;\n            allocateDirectiveIntoContext(context, directiveRef);\n            directiveRefs[detectedIndex + 1 /* SinglePropValuesIndexOffset */] =\n                nextOffsetInsertionIndex;\n            directiveRefs[detectedIndex + 3 /* StyleSanitizerOffset */] =\n                styleSanitizer || null;\n        }\n        else {\n            var singlePropStartPosition = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            if (directiveRefs[singlePropStartPosition] >= 0) {\n                // the directive has already been patched into the context\n                return -1;\n            }\n            directiveIndex = detectedIndex / 4 /* Size */;\n            // because the directive already existed this means that it was set during elementHostAttrs or\n            // elementStart which means that the binding values were not here. Therefore, the values below\n            // need to be applied so that single class and style properties can be assigned later.\n            var singlePropPositionIndex = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            directiveRefs[singlePropPositionIndex] = nextOffsetInsertionIndex;\n            // the sanitizer is also apart of the binding process and will be used when bindings are\n            // applied.\n            var styleSanitizerIndex = detectedIndex + 3 /* StyleSanitizerOffset */;\n            directiveRefs[styleSanitizerIndex] = styleSanitizer || null;\n        }\n        return directiveIndex;\n    }\n    function getMatchingBindingIndex(context, bindingName, start, end) {\n        for (var j = start; j < end; j += 4 /* Size */) {\n            if (getProp(context, j) === bindingName)\n                return j;\n        }\n        return -1;\n    }\n    /**\n     * Registers the provided multi styling (`[style]` and `[class]`) values to the context.\n     *\n     * This function will iterate over the provided `classesInput` and `stylesInput` map\n     * values and insert/update or remove them from the context at exactly the right\n     * spot.\n     *\n     * This function also takes in a directive which implies that the styling values will\n     * be evaluated for that directive with respect to any other styling that already exists\n     * on the context. When there are styles that conflict (e.g. say `ngStyle` and `[style]`\n     * both update the `width` property at the same time) then the styling algorithm code below\n     * will decide which one wins based on the directive styling prioritization mechanism. This\n     * mechanism is better explained in render3/interfaces/styling.ts#directives).\n     *\n     * This function will not render any styling values on screen, but is rather designed to\n     * prepare the context for that. `renderStyling` must be called afterwards to render any\n     * styling data that was set in this function (note that `updateClassProp` and\n     * `updateStyleProp` are designed to be run after this function is run).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     */\n    function updateStylingMap(context, classesInput, stylesInput, directiveRef) {\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        classesInput = classesInput || null;\n        stylesInput = stylesInput || null;\n        var ignoreAllClassUpdates = isMultiValueCacheHit(context, true, directiveIndex, classesInput);\n        var ignoreAllStyleUpdates = isMultiValueCacheHit(context, false, directiveIndex, stylesInput);\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        classesInput =\n            classesInput === NO_CHANGE ? readCachedMapValue(context, true, directiveIndex) : classesInput;\n        stylesInput =\n            stylesInput === NO_CHANGE ? readCachedMapValue(context, false, directiveIndex) : stylesInput;\n        var element = context[0 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput['value'] : stylesInput;\n        var classNames = EMPTY_ARRAY$1;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARRAY$1;\n            }\n        }\n        var multiStylesStartIndex = getMultiStylesStartIndex(context);\n        var multiClassesStartIndex = getMultiClassesStartIndex(context);\n        var multiClassesEndIndex = context.length;\n        if (!ignoreAllStyleUpdates) {\n            var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARRAY$1;\n            var styles = stylesValue || EMPTY_OBJ;\n            var totalNewEntries = patchStylingMapIntoContext(context, directiveIndex, stylesPlayerBuilderIndex, multiStylesStartIndex, multiClassesStartIndex, styleProps, styles, stylesInput, false);\n            if (totalNewEntries) {\n                multiClassesStartIndex += totalNewEntries * 4 /* Size */;\n                multiClassesEndIndex += totalNewEntries * 4 /* Size */;\n            }\n        }\n        if (!ignoreAllClassUpdates) {\n            var classes = (classesValue || EMPTY_OBJ);\n            patchStylingMapIntoContext(context, directiveIndex, classesPlayerBuilderIndex, multiClassesStartIndex, multiClassesEndIndex, classNames, applyAllClasses || classes, classesInput, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * Applies the given multi styling (styles or classes) values to the context.\n     *\n     * The styling algorithm code that applies multi-level styling (things like `[style]` and `[class]`\n     * values) resides here.\n     *\n     * Because this function understands that multiple directives may all write to the `[style]` and\n     * `[class]` bindings (through host bindings), it relies of each directive applying its binding\n     * value in order. This means that a directive like `classADirective` will always fire before\n     * `classBDirective` and therefore its styling values (classes and styles) will always be evaluated\n     * in the same order. Because of this consistent ordering, the first directive has a higher priority\n     * than the second one. It is with this prioritzation mechanism that the styling algorithm knows how\n     * to merge and apply redudant styling properties.\n     *\n     * The function itself applies the key/value entries (or an array of keys) to\n     * the context in the following steps.\n     *\n     * STEP 1:\n     *    First check to see what properties are already set and in use by another directive in the\n     *    context (e.g. `ngClass` set the `width` value and `[style.width]=\"w\"` in a directive is\n     *    attempting to set it as well).\n     *\n     * STEP 2:\n     *    All remaining properties (that were not set prior to this directive) are now updated in\n     *    the context. Any new properties are inserted exactly at their spot in the context and any\n     *    previously set properties are shifted to exactly where the cursor sits while iterating over\n     *    the context. The end result is a balanced context that includes the exact ordering of the\n     *    styling properties/values for the provided input from the directive.\n     *\n     * STEP 3:\n     *    Any unmatched properties in the context that belong to the directive are set to null\n     *\n     * Once the updating phase is done, then the algorithm will decide whether or not to flag the\n     * follow-up directives (the directives that will pass in their styling values) depending on if\n     * the \"shape\" of the multi-value map has changed (either if any keys are removed or added or\n     * if there are any new `null` values). If any follow-up directives are flagged as dirty then the\n     * algorithm will run again for them. Otherwise if the shape did not change then any follow-up\n     * directives will not run (so long as their binding values stay the same).\n     *\n     * @returns the total amount of new slots that were allocated into the context due to new styling\n     *          properties that were detected.\n     */\n    function patchStylingMapIntoContext(context, directiveIndex, playerBuilderIndex, ctxStart, ctxEnd, props, values, cacheValue, entryIsClassBased) {\n        var dirty = false;\n        var cacheIndex = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // the cachedValues array is the registry of all multi style values (map values). Each\n        // value is stored (cached) each time is updated.\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        // this is the index in which this directive has ownership access to write to this\n        // value (anything before is owned by a previous directive that is more important)\n        var ownershipValuesStartIndex = cachedValues[cacheIndex + 1 /* PositionStartOffset */];\n        var existingCachedValue = cachedValues[cacheIndex + 2 /* ValueOffset */];\n        var existingCachedValueCount = cachedValues[cacheIndex + 3 /* ValueCountOffset */];\n        var existingCachedValueIsDirty = cachedValues[cacheIndex + 0 /* DirtyFlagOffset */] === 1;\n        // A shape change means the provided map value has either removed or added new properties\n        // compared to what were in the last time. If a shape change occurs then it means that all\n        // follow-up multi-styling entries are obsolete and will be examined again when CD runs\n        // them. If a shape change has not occurred then there is no reason to check any other\n        // directive values if their identity has not changed. If a previous directive set this\n        // value as dirty (because its own shape changed) then this means that the object has been\n        // offset to a different area in the context. Because its value has been offset then it\n        // can't write to a region that it wrote to before (which may have been apart of another\n        // directive) and therefore its shape changes too.\n        var valuesEntryShapeChange = existingCachedValueIsDirty || ((!existingCachedValue && cacheValue) ? true : false);\n        var totalUniqueValues = 0;\n        var totalNewAllocatedSlots = 0;\n        // this is a trick to avoid building {key:value} map where all the values\n        // are `true` (this happens when a className string is provided instead of a\n        // map as an input value to this styling algorithm)\n        var applyAllProps = values === true;\n        // STEP 1:\n        // loop through the earlier directives and figure out if any properties here will be placed\n        // in their area (this happens when the value is null because the earlier directive erased it).\n        var ctxIndex = ctxStart;\n        var totalRemainingProperties = props.length;\n        while (ctxIndex < ownershipValuesStartIndex) {\n            var currentProp = getProp(context, ctxIndex);\n            if (totalRemainingProperties) {\n                for (var i = 0; i < props.length; i++) {\n                    var mapProp = props[i];\n                    var normalizedProp = mapProp ? (entryIsClassBased ? mapProp : hyphenate(mapProp)) : null;\n                    if (normalizedProp && currentProp === normalizedProp) {\n                        var currentValue = getValue(context, ctxIndex);\n                        var currentDirectiveIndex = getDirectiveIndexFromEntry(context, ctxIndex);\n                        var value = applyAllProps ? true : values[normalizedProp];\n                        var currentFlag = getPointers(context, ctxIndex);\n                        if (hasValueChanged(currentFlag, currentValue, value) &&\n                            allowValueChange(currentValue, value, currentDirectiveIndex, directiveIndex)) {\n                            setValue(context, ctxIndex, value);\n                            setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            if (hasInitialValueChanged(context, currentFlag, value)) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                        props[i] = null;\n                        totalRemainingProperties--;\n                        break;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // STEP 2:\n        // apply the left over properties to the context in the correct order.\n        if (totalRemainingProperties) {\n            var sanitizer = entryIsClassBased ? null : getStyleSanitizer(context, directiveIndex);\n            propertiesLoop: for (var i = 0; i < props.length; i++) {\n                var mapProp = props[i];\n                if (!mapProp) {\n                    // this is an early exit in case a value was already encountered above in the\n                    // previous loop (which means that the property was applied or rejected)\n                    continue;\n                }\n                var value = applyAllProps ? true : values[mapProp];\n                var normalizedProp = entryIsClassBased ? mapProp : hyphenate(mapProp);\n                var isInsideOwnershipArea = ctxIndex >= ownershipValuesStartIndex;\n                for (var j = ctxIndex; j < ctxEnd; j += 4 /* Size */) {\n                    var distantCtxProp = getProp(context, j);\n                    if (distantCtxProp === normalizedProp) {\n                        var distantCtxDirectiveIndex = getDirectiveIndexFromEntry(context, j);\n                        var distantCtxPlayerBuilderIndex = getPlayerBuilderIndex(context, j);\n                        var distantCtxValue = getValue(context, j);\n                        var distantCtxFlag = getPointers(context, j);\n                        if (allowValueChange(distantCtxValue, value, distantCtxDirectiveIndex, directiveIndex)) {\n                            // even if the entry isn't updated (by value or directiveIndex) then\n                            // it should still be moved over to the correct spot in the array so\n                            // the iteration loop is tighter.\n                            if (isInsideOwnershipArea) {\n                                swapMultiContextEntries(context, ctxIndex, j);\n                                totalUniqueValues++;\n                            }\n                            if (hasValueChanged(distantCtxFlag, distantCtxValue, value)) {\n                                if (value === null || value === undefined && value !== distantCtxValue) {\n                                    valuesEntryShapeChange = true;\n                                }\n                                setValue(context, ctxIndex, value);\n                                // SKIP IF INITIAL CHECK\n                                // If the former `value` is `null` then it means that an initial value\n                                // could be being rendered on screen. If that is the case then there is\n                                // no point in updating the value in case it matches. In other words if the\n                                // new value is the exact same as the previously rendered value (which\n                                // happens to be the initial value) then do nothing.\n                                if (distantCtxValue !== null ||\n                                    hasInitialValueChanged(context, distantCtxFlag, value)) {\n                                    setDirty(context, ctxIndex, true);\n                                    dirty = true;\n                                }\n                            }\n                            if (distantCtxDirectiveIndex !== directiveIndex ||\n                                playerBuilderIndex !== distantCtxPlayerBuilderIndex) {\n                                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            }\n                        }\n                        ctxIndex += 4 /* Size */;\n                        continue propertiesLoop;\n                    }\n                }\n                // fallback case ... value not found at all in the context\n                if (value != null) {\n                    valuesEntryShapeChange = true;\n                    totalUniqueValues++;\n                    var flag = prepareInitialFlag(context, normalizedProp, entryIsClassBased, sanitizer) |\n                        1 /* Dirty */;\n                    var insertionIndex = isInsideOwnershipArea ?\n                        ctxIndex :\n                        (ownershipValuesStartIndex + totalNewAllocatedSlots * 4 /* Size */);\n                    insertNewMultiProperty(context, insertionIndex, entryIsClassBased, normalizedProp, flag, value, directiveIndex, playerBuilderIndex);\n                    totalNewAllocatedSlots++;\n                    ctxEnd += 4 /* Size */;\n                    ctxIndex += 4 /* Size */;\n                    dirty = true;\n                }\n            }\n        }\n        // STEP 3:\n        // Remove (nullify) any existing entries in the context that were not apart of the\n        // map input value that was passed into this algorithm for this directive.\n        while (ctxIndex < ctxEnd) {\n            valuesEntryShapeChange = true; // some values are missing\n            var ctxValue = getValue(context, ctxIndex);\n            var ctxFlag = getPointers(context, ctxIndex);\n            var ctxDirective = getDirectiveIndexFromEntry(context, ctxIndex);\n            if (ctxValue != null) {\n                valuesEntryShapeChange = true;\n            }\n            if (hasValueChanged(ctxFlag, ctxValue, null)) {\n                setValue(context, ctxIndex, null);\n                // only if the initial value is falsy then\n                if (hasInitialValueChanged(context, ctxFlag, ctxValue)) {\n                    setDirty(context, ctxIndex, true);\n                    dirty = true;\n                }\n                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // Because the object shape has changed, this means that all follow-up directives will need to\n        // reapply their values into the object. For this to happen, the cached array needs to be updated\n        // with dirty flags so that follow-up calls to `updateStylingMap` will reapply their styling code.\n        // the reapplication of styling code within the context will reshape it and update the offset\n        // values (also follow-up directives can write new values in case earlier directives set anything\n        // to null due to removals or falsy values).\n        valuesEntryShapeChange = valuesEntryShapeChange || existingCachedValueCount !== totalUniqueValues;\n        updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, ownershipValuesStartIndex, ctxEnd, totalUniqueValues, valuesEntryShapeChange);\n        if (dirty) {\n            setContextDirty(context, true);\n            setDirectiveDirty(context, directiveIndex, true);\n        }\n        return totalNewAllocatedSlots;\n    }\n    /**\n     * Sets and resolves a single class value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param offset The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateClassProp(context, offset, input, directiveRef, forceOverride) {\n        updateSingleStylingValue(context, offset, input, true, directiveRef, forceOverride);\n    }\n    /**\n     * Sets and resolves a single style value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param offset The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateStyleProp(context, offset, input, directiveRef, forceOverride) {\n        updateSingleStylingValue(context, offset, input, false, directiveRef, forceOverride);\n    }\n    function updateSingleStylingValue(context, offset, input, isClassBased, directiveRef, forceOverride) {\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        if (hasValueChanged(currFlag, currValue, value) &&\n            (forceOverride || allowValueChange(currValue, value, currDirective, directiveIndex))) {\n            var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[0 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                playerBuildersAreDirty = true;\n            }\n            if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n            }\n            if (currDirective !== directiveIndex) {\n                var prop = getProp(context, singleIndex);\n                var sanitizer = getStyleSanitizer(context, directiveIndex);\n                setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setDirectiveDirty(context, directiveIndex, true);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param directiveRef an optional directive that will be used to target which\n     *    styling values are rendered. If left empty, only the bindings that are\n     *    registered on the template will be rendered.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveRef) {\n        var totalPlayersQueued = 0;\n        var targetDirectiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        if (isContextDirty(context) && isDirectiveDirty(context, targetDirectiveIndex)) {\n            var flushPlayerBuilders = context[1 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[0 /* ElementPosition */];\n            var multiStartIndex = getMultiStylesStartIndex(context);\n            var stillDirty = false;\n            for (var i = 9 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var flag = getPointers(context, i);\n                    var directiveIndex = getDirectiveIndexFromEntry(context, i);\n                    if (targetDirectiveIndex !== directiveIndex) {\n                        stillDirty = true;\n                        continue;\n                    }\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex) : null;\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it in case there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    // Note that we ignore class-based deferals because otherwise a class can never\n                    // be removed in the case that it exists as true in the initial classes list...\n                    if (!valueExists(valueToApply, isClassBased)) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setDirectiveDirty(context, targetDirectiveIndex, false);\n            setContextDirty(context, stillDirty);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     *\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n            // assign as numbers\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native.style.setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native.style.removeProperty(prop);\n        }\n    }\n    /**\n     * Adds/removes the provided className value to the provided element.\n     *\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n            // DOMTokenList will throw if we try to add or remove an empty string.\n        }\n        else if (className !== '') {\n            if (add) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    native['classList'].add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    native['classList'].remove(className);\n            }\n        }\n    }\n    function setSanitizeFlag(context, index, sanitizeYes) {\n        if (sanitizeYes) {\n            context[index] |= 4 /* Sanitize */;\n        }\n        else {\n            context[index] &= ~4 /* Sanitize */;\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBasedValue(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        var entryIsClassBased = flag & 2 /* Class */;\n        var initialValues = entryIsClassBased ? context[4 /* InitialClassValuesPosition */] :\n            context[3 /* InitialStyleValuesPosition */];\n        return initialValues[index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 9 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiClassesStartIndex(context) {\n        var classCache = context[6 /* CachedMultiClasses */];\n        return classCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function getMultiStylesStartIndex(context) {\n        var stylesCache = context[7 /* CachedMultiStyles */];\n        return stylesCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[8 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[8 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function directiveOwnerPointers(directiveIndex, playerIndex) {\n        return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n        var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n        context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n        var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n            65535 /* BitMask */;\n        return playerBuilderIndex;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[8 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 1 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 1 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[1 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[1 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        if (indexA === indexB)\n            return;\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var tmpDirectiveIndex = getDirectiveIndexFromEntry(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        var playerIndexA = getPlayerBuilderIndex(context, indexB);\n        var directiveIndexA = getDirectiveIndexFromEntry(context, indexB);\n        setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, tmpDirectiveIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n        setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        return value !== null;\n    }\n    function prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n        var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n        var initialIndex;\n        if (entryIsClassBased) {\n            flag |= 2 /* Class */;\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[4 /* InitialClassValuesPosition */], prop);\n        }\n        else {\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[3 /* InitialStyleValuesPosition */], prop);\n        }\n        initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n        return pointers(flag, initialIndex, 0);\n    }\n    function hasInitialValueChanged(context, flag, newValue) {\n        var initialValue = getInitialValue(context, flag);\n        return !initialValue || hasValueChanged(flag, initialValue, newValue);\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n    function getDirectiveIndexFromEntry(context, index) {\n        var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n        return value & 65535 /* BitMask */;\n    }\n    function getDirectiveIndexFromRegistry(context, directiveRef) {\n        var directiveIndex;\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var index = getDirectiveRegistryValuesIndexOf(dirs, directiveRef);\n        if (index === -1) {\n            // if the directive was not allocated then this means that styling is\n            // being applied in a dynamic way AFTER the element was already instantiated\n            index = dirs.length;\n            directiveIndex = index > 0 ? index / 4 /* Size */ : 0;\n            dirs.push(null, null, null, null);\n            dirs[index + 0 /* DirectiveValueOffset */] = directiveRef;\n            dirs[index + 2 /* DirtyFlagOffset */] = false;\n            dirs[index + 1 /* SinglePropValuesIndexOffset */] = -1;\n            var classesStartIndex = getMultiClassesStartIndex(context) || 9 /* SingleStylesStartPosition */;\n            registerMultiMapEntry(context, directiveIndex, true, context.length);\n            registerMultiMapEntry(context, directiveIndex, false, classesStartIndex);\n        }\n        else {\n            directiveIndex = index > 0 ? index / 4 /* Size */ : 0;\n        }\n        return directiveIndex;\n    }\n    function getDirectiveRegistryValuesIndexOf(directives, directive) {\n        for (var i = 0; i < directives.length; i += 4 /* Size */) {\n            if (directives[i] === directive) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    function getInitialStylingValuesIndexOf(keyValues, key) {\n        for (var i = 2 /* KeyValueStartPosition */; i < keyValues.length; i += 3 /* Size */) {\n            if (keyValues[i] === key)\n                return i;\n        }\n        return -1;\n    }\n    function getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n        var singlePropOffsetRegistryIndex = context[2 /* DirectiveRegistryPosition */][(directiveIndex * 4 /* Size */) +\n            1 /* SinglePropValuesIndexOffset */];\n        var offsets = context[5 /* SinglePropOffsetPositions */];\n        var indexForOffset = singlePropOffsetRegistryIndex +\n            2 /* ValueStartPosition */ +\n            (isClassBased ?\n                offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n                0) +\n            offset;\n        return offsets[indexForOffset];\n    }\n    function getStyleSanitizer(context, directiveIndex) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var value = dirs[directiveIndex * 4 /* Size */ +\n            3 /* StyleSanitizerOffset */] ||\n            dirs[3 /* StyleSanitizerOffset */] || null;\n        return value;\n    }\n    function isDirectiveDirty(context, directiveIndex) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        return dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */];\n    }\n    function setDirectiveDirty(context, directiveIndex, dirtyYes) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */] = dirtyYes;\n    }\n    function allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n        // the code below relies the importance of directive's being tied to their\n        // index value. The index values for each directive are derived from being\n        // registered into the styling context directive registry. The most important\n        // directive is the parent component directive (the template) and each directive\n        // that is added after is considered less important than the previous entry. This\n        // prioritization of directives enables the styling algorithm to decide if a style\n        // or class should be allowed to be updated/replaced in case an earlier directive\n        // already wrote to the exact same style-property or className value. In other words\n        // this decides what to do if and when there is a collision.\n        if (currentValue != null) {\n            if (newValue != null) {\n                // if a directive index is lower than it always has priority over the\n                // previous directive's value...\n                return newDirectiveOwner <= currentDirectiveOwner;\n            }\n            else {\n                // only write a null value in case it's the same owner writing it.\n                // this avoids having a higher-priority directive write to null\n                // only to have a lesser-priority directive change right to a\n                // non-null value immediately afterwards.\n                return currentDirectiveOwner === newDirectiveOwner;\n            }\n        }\n        return true;\n    }\n    /**\n     * Returns the className string of all the initial classes for the element.\n     *\n     * This function is designed to populate and cache all the static class\n     * values into a className string. The caching mechanism works by placing\n     * the completed className string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the className string (e.g. `on active red`)\n     */\n    function getInitialClassNameValue(context) {\n        var initialClassValues = context[4 /* InitialClassValuesPosition */];\n        var className = initialClassValues[1 /* CachedStringValuePosition */];\n        if (className === null) {\n            className = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialClassValues.length; i += 3 /* Size */) {\n                var isPresent = initialClassValues[i + 1];\n                if (isPresent) {\n                    className += (className.length ? ' ' : '') + initialClassValues[i];\n                }\n            }\n            initialClassValues[1 /* CachedStringValuePosition */] = className;\n        }\n        return className;\n    }\n    /**\n     * Returns the style string of all the initial styles for the element.\n     *\n     * This function is designed to populate and cache all the static style\n     * values into a style string. The caching mechanism works by placing\n     * the completed style string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the style string (e.g. `width:100px;height:200px`)\n     */\n    function getInitialStyleStringValue(context) {\n        var initialStyleValues = context[3 /* InitialStyleValuesPosition */];\n        var styleString = initialStyleValues[1 /* CachedStringValuePosition */];\n        if (styleString === null) {\n            styleString = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialStyleValues.length; i += 3 /* Size */) {\n                var value = initialStyleValues[i + 1];\n                if (value !== null) {\n                    styleString += (styleString.length ? ';' : '') + (initialStyleValues[i] + \":\" + value);\n                }\n            }\n            initialStyleValues[1 /* CachedStringValuePosition */] = styleString;\n        }\n        return styleString;\n    }\n    /**\n     * Returns the current cached mutli-value for a given directiveIndex within the provided context.\n     */\n    function readCachedMapValue(context, entryIsClassBased, directiveIndex) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        return values[index + 2 /* ValueOffset */] || null;\n    }\n    /**\n     * Determines whether the provided multi styling value should be updated or not.\n     *\n     * Because `[style]` and `[class]` bindings rely on an identity change to occur before\n     * applying new values, the styling algorithm may not update an existing entry into\n     * the context if a previous directive's entry changed shape.\n     *\n     * This function will decide whether or not a value should be applied (if there is a\n     * cache miss) to the context based on the following rules:\n     *\n     * - If there is an identity change between the existing value and new value\n     * - If there is no existing value cached (first write)\n     * - If a previous directive flagged the existing cached value as dirty\n     */\n    function isMultiValueCacheHit(context, entryIsClassBased, directiveIndex, newValue) {\n        var indexOfCachedValues = entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */;\n        var cachedValues = context[indexOfCachedValues];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        if (cachedValues[index + 0 /* DirtyFlagOffset */])\n            return false;\n        return newValue === NO_CHANGE ||\n            readCachedMapValue(context, entryIsClassBased, directiveIndex) === newValue;\n    }\n    /**\n     * Updates the cached status of a multi-styling value in the context.\n     *\n     * The cached map array (which exists in the context) contains a manifest of\n     * each multi-styling entry (`[style]` and `[class]` entries) for the template\n     * as well as all directives.\n     *\n     * This function will update the cached status of the provided multi-style\n     * entry within the cache.\n     *\n     * When called, this function will update the following information:\n     * - The actual cached value (the raw value that was passed into `[style]` or `[class]`)\n     * - The total amount of unique styling entries that this value has written into the context\n     * - The exact position of where the multi styling entries start in the context for this binding\n     * - The dirty flag will be set to true\n     *\n     * If the `dirtyFutureValues` param is provided then it will update all future entries (binding\n     * entries that exist as apart of other directives) to be dirty as well. This will force the\n     * styling algorithm to reapply those values once change detection checks them (which will in\n     * turn cause the styling context to update itself and the correct styling values will be\n     * rendered on screen).\n     */\n    function updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, startPosition, endPosition, totalValues, dirtyFutureValues) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // in the event that this is true we assume that future values are dirty and therefore\n        // will be checked again in the next CD cycle\n        if (dirtyFutureValues) {\n            var nextStartPosition = startPosition + totalValues * 4 /* Size */;\n            for (var i = index + 4 /* Size */; i < values.length; i += 4 /* Size */) {\n                values[i + 1 /* PositionStartOffset */] = nextStartPosition;\n                values[i + 0 /* DirtyFlagOffset */] = 1;\n            }\n        }\n        values[index + 0 /* DirtyFlagOffset */] = 0;\n        values[index + 1 /* PositionStartOffset */] = startPosition;\n        values[index + 2 /* ValueOffset */] = cacheValue;\n        values[index + 3 /* ValueCountOffset */] = totalValues;\n        // the code below counts the total amount of styling values that exist in\n        // the context up until this directive. This value will be later used to\n        // update the cached value map's total counter value.\n        var totalStylingEntries = totalValues;\n        for (var i = 1 /* ValuesStartPosition */; i < index; i += 4 /* Size */) {\n            totalStylingEntries += values[i + 3 /* ValueCountOffset */];\n        }\n        // because style values come before class values in the context this means\n        // that if any new values were inserted then the cache values array for\n        // classes is out of sync. The code below will update the offsets to point\n        // to their new values.\n        if (!entryIsClassBased) {\n            var classCache = context[6 /* CachedMultiClasses */];\n            var classesStartPosition = classCache[1 /* ValuesStartPosition */ +\n                1 /* PositionStartOffset */];\n            var diffInStartPosition = endPosition - classesStartPosition;\n            for (var i = 1 /* ValuesStartPosition */; i < classCache.length; i += 4 /* Size */) {\n                classCache[i + 1 /* PositionStartOffset */] += diffInStartPosition;\n            }\n        }\n        values[0 /* EntriesCountPosition */] = totalStylingEntries;\n    }\n    function hyphenateEntries(entries) {\n        var newEntries = [];\n        for (var i = 0; i < entries.length; i++) {\n            newEntries.push(hyphenate(entries[i]));\n        }\n        return newEntries;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (match) { return match.charAt(0) + \"-\" + match.charAt(1).toLowerCase(); });\n    }\n    function registerMultiMapEntry(context, directiveIndex, entryIsClassBased, startPosition, count) {\n        if (count === void 0) { count = 0; }\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        if (directiveIndex > 0) {\n            var limit = 1 /* ValuesStartPosition */ +\n                (directiveIndex * 4 /* Size */);\n            while (cachedValues.length < limit) {\n                // this means that ONLY directive class styling (like ngClass) was used\n                // therefore the root directive will still need to be filled in as well\n                // as any other directive spaces in case they only used static values\n                cachedValues.push(0, startPosition, null, 0);\n            }\n        }\n        cachedValues.push(0, startPosition, null, count);\n    }\n    /**\n     * Inserts or updates an existing entry in the provided `staticStyles` collection.\n     *\n     * @param index the index representing an existing styling entry in the collection:\n     *  if provided (numeric): then it will update the existing entry at the given position\n     *  if null: then it will insert a new entry within the collection\n     * @param staticStyles a collection of style or class entries where the value will\n     *  be inserted or patched\n     * @param prop the property value of the entry (e.g. `width` (styles) or `foo` (classes))\n     * @param value the styling value of the entry (e.g. `absolute` (styles) or `true` (classes))\n     * @param directiveOwnerIndex the directive owner index value of the styling source responsible\n     *        for these styles (see `interfaces/styling.ts#directives` for more info)\n     * @returns the index of the updated or new entry within the collection\n     */\n    function addOrUpdateStaticStyle(index, staticStyles, prop, value, directiveOwnerIndex) {\n        if (index === null) {\n            index = staticStyles.length;\n            staticStyles.push(null, null, null);\n            staticStyles[index + 0 /* PropOffset */] = prop;\n        }\n        staticStyles[index + 1 /* ValueOffset */] = value;\n        staticStyles[index + 2 /* DirectiveOwnerOffset */] = directiveOwnerIndex;\n        return index;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.stylingTemplate) {\n                    if (!isCssClassMatching(readClassValueFromTNode(tNode), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    function readClassValueFromTNode(tNode) {\n        // comparing against CSS class values is complex because the compiler doesn't place them as\n        // regular attributes when an element is created. Instead, the classes (and styles for\n        // that matter) are placed in a special styling context that is used for resolving all\n        // class/style values across static attributes, [style]/[class] and [style.prop]/[class.name]\n        // bindings. Therefore if and when the styling context exists then the class values are to be\n        // extracted by the context helper code below...\n        return tNode.stylingTemplate ? getInitialClassNameValue(tNode.stylingTemplate) : '';\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * =========================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes\n     * =========================================================================================\n     * Inline + Projection     | YES               | YES                 | NO\n     * -----------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES\n     * -----------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO\n     * -----------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO\n     * =========================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching projection selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be\n     * compared to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingProjectionSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null &&\n                    isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true)) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function applyOnCreateInstructions(tNode) {\n        // there may be some instructions that need to run in a specific\n        // order because the CREATE block in a directive runs before the\n        // CREATE block in a template. To work around this instructions\n        // can get access to the function array below and defer any code\n        // to run after the element is created.\n        var fns;\n        if (fns = tNode.onElementCreationFns) {\n            for (var i = 0; i < fns.length; i++) {\n                fns[i]();\n            }\n            tNode.onElementCreationFns = null;\n        }\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        var creationMode = isCreationMode(lView);\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        // Resetting the bindingIndex of the current LView as the next steps may trigger change detection.\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!creationMode) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executePreOrderHooks(lView, tView, checkNoChangesMode, undefined);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView, lView);\n            resetPreOrderHookFlags(lView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode, 1 /* AfterContentInitHooksToBeRun */, undefined);\n            setHostBindings(tView, lView);\n        }\n        // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n        // content queries are resolved during change detection (i.e. update mode), after embedded\n        // views are refreshed (see block above).\n        if (creationMode && tView.staticContentQueries) {\n            refreshContentQueries(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        viewData[BINDING_INDEX] = bindingRootIndex;\n                        instruction(2 /* Update */, unwrapRNode(viewData[currentDirectiveIndex]), currentElementIndex);\n                    }\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView, lView) {\n        if (tView.contentQueries != null) {\n            setCurrentQueryIndex(0);\n            for (var i = 0; i < tView.contentQueries.length; i++) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                ngDevMode &&\n                    assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var parent_1 = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n            // Parents cannot cross component boundaries because components will be used in multiple places,\n            // so it's only set if the view is the same.\n            var parentInSameView = parent_1 && parent_1 !== lView[T_HOST];\n            var tParentNode = parentInSameView ? parent_1 : null;\n            tNode = tView.data[adjustedIndex] = createTNode(tParentNode, type, adjustedIndex, name, attrs);\n        }\n        // Now link ourselves into the tree.\n        // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n        // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        if (tView.firstChild == null) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            for (var i = 0; i < numSlotsToAlloc; i++) {\n                tView.blueprint.push(null);\n                tView.data.push(null);\n                view.push(null);\n            }\n            // We should only increment the expando start index if there aren't already directives\n            // and injectors saved in the \"expando\" section\n            if (!tView.expandoInstructions) {\n                tView.expandoStartIndex += numSlotsToAlloc;\n            }\n            else {\n                // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                // bindings know that they should skip x slots\n                tView.expandoInstructions.push(numSlotsToAlloc);\n            }\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 16 /* CheckAlways */, null, null);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        assignTViewNodeToLView(tView, null, -1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        var oldView;\n        if (viewToRender[FLAGS] & 512 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[T_HOST]);\n                resetPreOrderHookFlags(viewToRender);\n                namespaceHTML();\n                tView.template(getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                refreshDescendantViews(viewToRender);\n            }\n            finally {\n                leaveView(oldView);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (creationModeIsActive) {\n                // creation mode pass\n                if (templateFn) {\n                    namespaceHTML();\n                    templateFn(1 /* Create */, context);\n                }\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~4 /* CreationMode */;\n            }\n            // update mode pass\n            resetPreOrderHookFlags(hostView);\n            templateFn && templateFn(2 /* Update */, context);\n            refreshDescendantViews(hostView);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        registerPostOrderHooks(tView, previousOrParentTNode);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        var renderer = lView[RENDERER];\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        var initialStylesIndex = 0;\n        var initialClassesIndex = 0;\n        if (attrs) {\n            var lastAttrIndex = setUpAttributes(native, attrs);\n            // it's important to only prepare styling-related datastructures once for a given\n            // tNode and not each time an element is created. Also, the styling code is designed\n            // to be patched and constructed at various points, but only up until the styling\n            // template is first allocated (which happens when the very first style/class binding\n            // value is evaluated). When the template is allocated (when it turns into a context)\n            // then the styling template is locked and cannot be further extended (it can only be\n            // instantiated into a context per element)\n            if (tView.firstTemplatePass && !tNode.stylingTemplate) {\n                var stylingAttrsStartIndex = attrsStylingIndexOf(attrs, lastAttrIndex);\n                if (stylingAttrsStartIndex >= 0) {\n                    tNode.stylingTemplate = initializeStaticContext(attrs, stylingAttrsStartIndex);\n                }\n            }\n            if (tNode.stylingTemplate) {\n                // the initial style/class values are rendered immediately after having been\n                // initialized into the context so the element styling is ready when directives\n                // are initialized (since they may read style/class values in their constructor)\n                initialStylesIndex = renderInitialStyles(native, tNode.stylingTemplate, renderer);\n                initialClassesIndex = renderInitialClasses(native, tNode.stylingTemplate, renderer);\n            }\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n            if (inputData && inputData.hasOwnProperty('style')) {\n                tNode.flags |= 16 /* hasStyleInput */;\n            }\n        }\n        // we render the styling again below in case any directives have set any `style` and/or\n        // `class` host attribute values...\n        if (tNode.stylingTemplate) {\n            renderInitialClasses(native, tNode.stylingTemplate, renderer, initialClassesIndex);\n            renderInitialStyles(native, tNode.stylingTemplate, renderer, initialStylesIndex);\n        }\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, findDirectiveMatches(tView, lView, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, lView, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, lView, previousOrParentTNode);\n        saveResolvedLocalsInData(lView, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @param viewQuery View query that should be saved on TView\n     * @param schemas Schemas that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData = createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery, schemas));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice().fill(null, bindingStartIndex),\n            bindingStartIndex: bindingStartIndex,\n            viewQueryStartIndex: initialViewLength,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            staticViewQueries: false,\n            staticContentQueries: false,\n            preOrderHooks: null,\n            preOrderCheckHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n            schemas: schemas,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + renderStringify(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     */\n    function listener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n     * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n     * in the component's renderer. Normally all host listeners are evaluated with the\n     * parent component's renderer, but, in the case of animation @triggers, they need\n     * to be evaluated with the sub component's renderer (because that's where the\n     * animation triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `listener`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     */\n    function componentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : {};\n            var target = resolved.target || native;\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var useCaptureOrSubIdx = useCapture;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // The first argument of `listen` function in Procedural Renderer is:\n                // - either a target name (as a string) in case of global target (window, document, body)\n                // - or element reference (in all other cases)\n                listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                lCleanup.push(listenerFn, cleanupFn);\n                useCaptureOrSubIdx = lCleanupIndex + 1;\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                lCleanup.push(listenerFn);\n            }\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCaptureOrSubIdx);\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        // this is required for all host-level styling-related instructions to run\n        // in the correct order\n        previousOrParentTNode.onElementCreationFns && applyOnCreateInstructions(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        registerPostOrderHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n        // this is fired at the end of elementEnd because ALL of the stylingBindings code\n        // (for directives and the template) have now executed which means the styling\n        // context can be instantiated properly.\n        if (hasClassInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['class'], getInitialClassNameValue(stylingContext));\n        }\n        if (hasStyleInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['style'], getInitialStyleStringValue(stylingContext));\n        }\n    }\n    /**\n     * Flushes all the lifecycle hooks for directives up until (and excluding) that node index\n     *\n     * @param index The index of the element in the `LView`\n     */\n    function flushHooksUpTo(index) {\n        var lView = getLView();\n        executePreOrderHooks(lView, lView[TVIEW], getCheckNoChangesMode(), index);\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     */\n    function elementAttribute(index, name, value, sanitizer, namespace) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && validateAgainstEventAttributes(name);\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element_1 = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name, namespace) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var tNode = getTNode(index, lView);\n                var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setAttribute(element_1, name, strValue, namespace);\n                }\n                else {\n                    namespace ? element_1.setAttributeNS(namespace, name, strValue) :\n                        element_1.setAttribute(name, strValue);\n                }\n            }\n        }\n    }\n    /**\n     * Update a property on an element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function elementProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function componentHostSyntheticProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     */\n    var ATTR_TO_PROP = {\n        'class': 'className',\n        'for': 'htmlFor',\n        'formaction': 'formAction',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = ATTR_TO_PROP[propName] || propName;\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                validateAgainstUnknownProperties(lView, element, propName, tNode);\n                ngDevMode.rendererSetProperty++;\n            }\n            savePropertyDebugData(tNode, lView, propName, lView[TVIEW].data, nativeOnly);\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n    }\n    function validateAgainstUnknownProperties(hostView, element, propName, tNode) {\n        // If the tag matches any of the schemas we shouldn't throw.\n        if (matchingSchemas(hostView, tNode.tagName)) {\n            return;\n        }\n        // If prop is not a known property of the HTML element...\n        if (!(propName in element) &&\n            // and we are in a browser context... (web worker nodes should be skipped)\n            typeof Node === 'function' && element instanceof Node &&\n            // and isn't a synthetic animation property...\n            propName[0] !== ANIMATION_PROP_PREFIX) {\n            // ... it is probably a user error and we should throw.\n            throw new Error(\"Template error: Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n        }\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Stores debugging data for this property binding on first template pass.\n     * This enables features like DebugElement.properties.\n     */\n    function savePropertyDebugData(tNode, lView, propName, tData, nativeOnly) {\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        // Bind/interpolation functions save binding metadata in the last binding index,\n        // but leave the property name blank. If the interpolation delimiter is at the 0\n        // index, we know that this is our first pass and the property name still needs to\n        // be set.\n        var bindingMetadata = tData[lastBindingIndex];\n        if (bindingMetadata[0] == INTERPOLATION_DELIMITER) {\n            tData[lastBindingIndex] = propName + bindingMetadata;\n            // We don't want to store indices for host bindings because they are stored in a\n            // different part of LView (the expando section).\n            if (!nativeOnly) {\n                if (tNode.propertyMetadataStartIndex == -1) {\n                    tNode.propertyMetadataStartIndex = lastBindingIndex;\n                }\n                tNode.propertyMetadataEndIndex = lastBindingIndex + 1;\n            }\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            propertyMetadataStartIndex: -1,\n            propertyMetadataEndIndex: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: null,\n            next: null,\n            projectionNext: null,\n            child: null,\n            parent: tParent,\n            stylingTemplate: null,\n            projection: null,\n            onElementCreationFns: null,\n        };\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputAliases mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    function setNgReflectProperties(lView, element, type, inputs, value) {\n        var _a;\n        for (var i = 0; i < inputs.length; i += 3) {\n            var renderer = lView[RENDERER];\n            var attrName = normalizeDebugBindingName(inputs[i + 2]);\n            var debugValue = normalizeDebugBindingValue(value);\n            if (type === 3 /* Element */) {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n            else if (value !== undefined) {\n                var value_1 = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setValue(element, value_1);\n                }\n                else {\n                    element.textContent = value_1;\n                }\n            }\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNodeFlags node flags\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class bindings on the element. Note for static values (no binding)\n     * see `elementStart` and `elementHostAttrs`.\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `elementClassProp` refers to the class name by index in this array.\n     *        (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `elementStyleProp` refers to the class name by index in this array.\n     *        (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        property values that are applied to the element (during rendering).\n     *        Note that the sanitizer instance itself is tied to the `directive` (if  provided).\n     * @param directive A directive instance the styling is associated with. If not provided\n     *        current view's controller instance is assumed.\n     *\n     * @publicApi\n     */\n    function elementStyling(classBindingNames, styleBindingNames, styleSanitizer, directive) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        if (directive) {\n            // this will ALWAYS happen first before the bindings are applied so that the ordering\n            // of directives is correct (otherwise if a follow-up directive contains static styling,\n            // which is applied through elementHostAttrs, then it may end up being listed in the\n            // context directive array before a former one (because the former one didn't contain\n            // any static styling values))\n            allocateDirectiveIntoContext(tNode.stylingTemplate, directive);\n            var fns = tNode.onElementCreationFns = tNode.onElementCreationFns || [];\n            fns.push(function () { return initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directive); });\n        }\n        else {\n            // this will make sure that the root directive (the template) will always be\n            // run FIRST before all the other styling properties are populated into the\n            // context...\n            initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directive);\n        }\n    }\n    function initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directive) {\n        updateContextWithBindings(tNode.stylingTemplate, directive || null, classBindingNames, styleBindingNames, styleSanitizer);\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @publicApi\n     */\n    function elementHostAttrs(directive, attrs) {\n        var tNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var native = getNativeByTNode(tNode, lView);\n        var lastAttrIndex = setUpAttributes(native, attrs);\n        var stylingAttrsStartIndex = attrsStylingIndexOf(attrs, lastAttrIndex);\n        if (stylingAttrsStartIndex >= 0) {\n            if (tNode.stylingTemplate) {\n                patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, stylingAttrsStartIndex, directive);\n            }\n            else {\n                tNode.stylingTemplate =\n                    initializeStaticContext(attrs, stylingAttrsStartIndex, directive);\n            }\n        }\n    }\n    /**\n     * Apply styling binding to the element.\n     *\n     * This instruction is meant to be run after `elementStyle` and/or `elementStyleProp`.\n     * if any styling bindings have changed then the changes are flushed to the element.\n     *\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStylingApply(index, directive) {\n        var lView = getLView();\n        var isFirstRender = (lView[FLAGS] & 8 /* FirstLViewPass */) !== 0;\n        var totalPlayersQueued = renderStyling(getStylingContext(index + HEADER_OFFSET, lView), lView[RENDERER], lView, isFirstRender, null, null, directive);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Update a style bindings value on an element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling element is updated as part of `elementStylingApply`.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `elementStlyingBindings`.\n     * @param value New value to write (null to remove). Note that if a directive also\n     *        attempts to write to the same binding value then it will only be able to\n     *        do so if the template binding value is `null` (or doesn't exist at all).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStyleProp(index, styleIndex, value, suffix, directive, forceOverride) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd, directive, forceOverride);\n    }\n    /**\n     * Add or remove a class via a class binding on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case and, therefore,\n     * the class itself must already be applied using `elementStyling` within\n     * the creation block.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `elementStlyingBindings` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n     * @param forceOverride Whether or not this value will be applied regardless of where it is being\n     *        set within the directive priority structure.\n     *\n     * @publicApi\n     */\n    function elementClassProp(index, classIndex, value, directive, forceOverride) {\n        var input = (value instanceof BoundPlayerFactory) ?\n            value :\n            booleanOrNull(value);\n        updateClassProp(getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, input, directive, forceOverride);\n    }\n    function booleanOrNull(value) {\n        if (typeof value === 'boolean')\n            return value;\n        return value ? true : null;\n    }\n    /**\n     * Update style and/or class bindings using object literal.\n     *\n     * This instruction is meant apply styling via the `[style]=\"exp\"` and `[class]=\"exp\"` template\n     * bindings. When styles are applied to the element they will then be placed with respect to\n     * any styles set with `elementStyleProp`. If any styles are set to `null` then they will be\n     * removed from the element. This instruction is also called for host bindings that write to\n     * `[style]` and `[class]` (the directive param helps the instruction code determine where the\n     * binding values come from).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n     *\n     * @publicApi\n     */\n    function elementStylingMap(index, classes, styles, directive) {\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!directive) {\n            if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n                var initialClasses = getInitialClassNameValue(stylingContext);\n                var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + forceClassesAsString(classes);\n                setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n                classes = NO_CHANGE;\n            }\n            if (hasStyleInput(tNode) && styles !== NO_CHANGE) {\n                var initialStyles = getInitialClassNameValue(stylingContext);\n                var styleInputVal = (initialStyles.length ? (initialStyles + ' ') : '') + forceStylesAsString(styles);\n                setInputsForProperty(lView, tNode.inputs['style'], styleInputVal);\n                styles = NO_CHANGE;\n            }\n        }\n        updateStylingMap(stylingContext, classes, styles, directive);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, renderStringify(value)) :\n                element_2.textContent = renderStringify(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var directive = viewData[i];\n            if (def.hostBindings) {\n                invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n            }\n            else if (firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        def.hostBindings(1 /* Create */, directive, tNode.index - HEADER_OFFSET);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, previousOrParentTNode);\n        }\n        if (viewData[TVIEW].firstTemplatePass && def.contentQueries) {\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        var tView = getLView()[TVIEW];\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n    */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, lView[previousOrParentTNode.index], previousOrParentTNode, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[T_HOST] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[previousOrParentTNode.index] = componentView;\n        if (lView[TVIEW].firstTemplatePass) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, isForViewContainerRef) {\n        ngDevMode && assertDomNode(native);\n        ngDevMode && assertLView(currentView);\n        var lContainer = [\n            hostNative,\n            true,\n            isForViewContainerRef ? -1 : 0,\n            currentView,\n            null,\n            null,\n            [],\n            native,\n        ];\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        addTContainerToQueries(lView, tContainerNode);\n        attachPatchData(getNativeByTNode(tContainerNode, lView), lView);\n        registerPostOrderHooks(tView, tContainerNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        var lView = getLView();\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        addTContainerToQueries(lView, tNode);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(lView[adjustedIndex], lView, comment);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Reporting a TContainer node queries is a 2-step process as we need to:\n     * - check if the container node itself is matching (query might match a <ng-template> node);\n     * - prepare room for nodes from views that might be created based on the TemplateRef linked to this\n     * container.\n     *\n     * Those 2 operations need to happen in the specific order (match the container node itself, then\n     * prepare space for nodes from views).\n     */\n    function addTContainerToQueries(lView, tContainerNode) {\n        var queries = lView[QUERIES];\n        if (queries) {\n            queries.addNode(tContainerNode);\n            var lContainer = lView[tContainerNode.index];\n            lContainer[QUERIES] = queries.container();\n        }\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executePreOrderHooks(lView, tView, getCheckNoChangesMode(), undefined);\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = lView[CHILD_HEAD]; current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[T_HOST];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        resetPreOrderHookFlags(lView);\n        refreshDescendantViews(lView); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        leaveView(lContainer[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttachedToChangeDetector(hostView) &&\n            hostView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var projectionHeads = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ?\n                    matchingProjectionSelectorIndex(componentChild, selectors, textSelectors) :\n                    0;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].projectionNext = componentChild;\n                }\n                else {\n                    projectionHeads[bucketIndex] = componentChild;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        appendProjectedNodes(lView, tProjectionNode, selectorIndex, findComponentView(lView));\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out of\n        // order, the change detection will run out of order, as the act of retrieving the the LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 1 /* isComponent */ ? getComponentViewByIndex(tNode.index, lView) : lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            try {\n                var result = listenerFn(e);\n                if (wrapWithPreventDefault && result === false) {\n                    e.preventDefault();\n                    // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                    e.returnValue = false;\n                }\n                return result;\n            }\n            catch (error) {\n                handleError(lView, error);\n            }\n        };\n    }\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_2 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_2) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_2;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            if (isCreationMode(view)) {\n                checkView(view, context); // creation mode pass\n            }\n            checkView(view, context); // update mode pass\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var templateFn = hostTView.template;\n        var creationMode = isCreationMode(hostView);\n        try {\n            resetPreOrderHookFlags(hostView);\n            namespaceHTML();\n            creationMode && executeViewQueryFn(1 /* Create */, hostTView, component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            // Only check view queries again in creation mode if there are static view queries\n            if (!creationMode || hostTView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, hostTView, component);\n            }\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function executeViewQueryFn(flags, tView, component) {\n        var viewQuery = tView.viewQuery;\n        if (viewQuery) {\n            setCurrentQueryIndex(tView.viewQueryStartIndex);\n            viewQuery(flags, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        storeBindingMetadata(lView);\n        return bindingUpdated(lView, bindingIndex, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     */\n    function allocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var tData = lView[TVIEW].data;\n        var bindingIndex = lView[BINDING_INDEX];\n        if (tData[bindingIndex] == null) {\n            // 2 is the index of the first static interstitial value (ie. not prefix)\n            for (var i = 2; i < values.length; i += 2) {\n                tData[bindingIndex++] = values[i];\n            }\n            bindingIndex = lView[BINDING_INDEX];\n        }\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        storeBindingMetadata(lView, values[0], values[values.length - 1]);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        storeBindingMetadata(lView, prefix, suffix);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            lView[TVIEW].data[bindingIndex] = i0;\n        }\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n            tData[bindingIndex + 6] = i6;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates binding metadata for a particular binding and stores it in\n     * TView.data. These are generated in order to support DebugElement.properties.\n     *\n     * Each binding / interpolation will have one (including attribute bindings)\n     * because at the time of binding, we don't know to which instruction the binding\n     * belongs. It is always stored in TView.data at the index of the last binding\n     * value in LView (e.g. for interpolation8, it would be stored at the index of\n     * the 8th value).\n     *\n     * @param lView The LView that contains the current binding index.\n     * @param prefix The static prefix string\n     * @param suffix The static suffix string\n     *\n     * @returns Newly created binding metadata string for this binding or null\n     */\n    function storeBindingMetadata(lView, prefix, suffix) {\n        if (prefix === void 0) { prefix = ''; }\n        if (suffix === void 0) { suffix = ''; }\n        var tData = lView[TVIEW].data;\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        var value = INTERPOLATION_DELIMITER + prefix + INTERPOLATION_DELIMITER + suffix;\n        return tData[lastBindingIndex] == null ? (tData[lastBindingIndex] = value) : null;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(getLView(), index);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return getLView();\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element, context);\n        var rootContext = getRootContext(lView);\n        addPlayerInternal(playerContext, rootContext, element, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + renderStringify(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            addToViewTree(rootView, componentView);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~4 /* CreationMode */;\n            resetPreOrderHookFlags(rootView);\n            refreshDescendantViews(rootView); // update mode pass\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            rootTNode.onElementCreationFns && applyOnCreateInstructions(rootTNode);\n        }\n        if (rootTNode.stylingTemplate) {\n            var native = componentView[HOST];\n            renderInitialClasses(native, rootTNode.stylingTemplate, componentView[RENDERER]);\n            renderInitialStyles(native, rootTNode.stylingTemplate, componentView[RENDERER]);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function () {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            superHostBindings_1(rf, ctx, elementIndex);\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                var prevViewQuery_1 = definition.viewQuery;\n                var superViewQuery_1 = superDef.viewQuery;\n                if (superViewQuery_1) {\n                    if (prevViewQuery_1) {\n                        definition.viewQuery = function (rf, ctx) {\n                            superViewQuery_1(rf, ctx);\n                            prevViewQuery_1(rf, ctx);\n                        };\n                    }\n                    else {\n                        definition.viewQuery = superViewQuery_1;\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (rf, ctx, directiveIndex) {\n                            superContentQueries_1(rf, ctx, directiveIndex);\n                            prevContentQueries_1(rf, ctx, directiveIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        NgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            _loop_1();\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY$1) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$1 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$1 === undefined) {\n            NULL_INJECTOR$1 = new NullInjector();\n        }\n        return NULL_INJECTOR$1;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            if (source === void 0) { source = null; }\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (def instanceof Array ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, flags & exports.InjectFlags.Optional ? null : notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$2;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Cannot instantiate cyclic dependency! \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            var injectorDef = getInjectorDef(token);\n            if (injectorDef !== null) {\n                return injectorDef.factory;\n            }\n            else if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            else if (token instanceof Function) {\n                var paramLength = token.length;\n                if (paramLength > 0) {\n                    var args = new Array(paramLength).fill('?');\n                    throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n                }\n                return function () { return new token(); };\n            }\n            throw new Error('unreachable');\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    var ngModuleDetail = '';\n                    if (ngModuleType && providers) {\n                        var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n                        ngModuleDetail =\n                            \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n                    }\n                    throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE$2 in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    var tView = lView[TVIEW];\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNode(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _hostLContainer, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._hostLContainer = _hostLContainer;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._hostLContainer[QUERIES], this._injectorIndex);\n                    if (container) {\n                        insertView(lView, container, index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, hostContainer, hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('0.0.0');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode, text) { this.delegate.setValue(renderNode, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            // The component definition does not include the wildcard ('*') selector in its list.\n            // It is implicitly expected as the first item in the projectable nodes array.\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? __spread(['*'], componentDef.ngContentSelectors) : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, componentView);\n                refreshDescendantViews(rootLView);\n            }\n            finally {\n                leaveView(oldLView);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            !this.hostView.destroyed && this.hostView.destroy();\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        allocExpando(viewData, i18nVarsCount);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicAPI\n     */\n    function i18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                if (!matches_1[content]) {\n                    var placeholders_1 = [];\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders_1.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders_1;\n                }\n                if (!matches_1[content].length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var placeholders = matches_1[content];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n            // verify that we injected all values\n            var hasUnmatchedValues = Object.keys(matches_1).some(function (key) { return !!matches_1[key].length; });\n            if (hasUnmatchedValues) {\n                throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches_1));\n            }\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var tNode = createNodeAtIndex(index, type, native, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode = createDynamicNodeAtIndex(textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18n(index, message, subTemplateIndex) {\n        i18nStart(index, message, subTemplateIndex);\n        i18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.hasOwnProperty('decorators') && clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            add(this.shallow, tNode);\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            query.containerValues.splice(index, 0, query.values);\n            // mark a query as dirty only when inserted view had matching modes\n            if (query.values.length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function assertViewQueryhasPointerToDeclarationContainer(query) {\n        assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var lView = getLView();\n        var queryList = new QueryList();\n        var queries = lView[QUERIES] || (lView[QUERIES] = new LQueries_(null, null, null));\n        queryList._valuesTree = [];\n        queryList._static = false;\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        var creationMode = isCreationMode();\n        // if creation mode and static or update mode and not static\n        if (queryList.dirty && creationMode === queryListImpl._static) {\n            queryList.reset(queryListImpl._valuesTree || []);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     */\n    function staticViewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var queryList = viewQuery(predicate, descend, read);\n        var tView = getLView()[TVIEW];\n        queryList._static = true;\n        if (!tView.staticViewQueries) {\n            tView.staticViewQueries = true;\n        }\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function viewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n        }\n        var index = getCurrentQueryIndex();\n        var viewQuery = query(predicate, descend, read);\n        store(index - HEADER_OFFSET, viewQuery);\n        setCurrentQueryIndex(index + 1);\n        return viewQuery;\n    }\n    /**\n    * Loads current View Query and moves the pointer/index to the next View Query in LView.\n    */\n    function loadViewQuery() {\n        var index = getCurrentQueryIndex();\n        setCurrentQueryIndex(index + 1);\n        return load(index - HEADER_OFFSET);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function contentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var contentQuery = query(predicate, descend, read);\n        (lView[CONTENT_QUERIES] || (lView[CONTENT_QUERIES] = [])).push(contentQuery);\n        if (tView.firstTemplatePass) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 1] : -1;\n            if (directiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(directiveIndex);\n            }\n        }\n        return contentQuery;\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function staticContentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var queryList = contentQuery(directiveIndex, predicate, descend, read);\n        var tView = getLView()[TVIEW];\n        queryList._static = true;\n        if (!tView.staticContentQueries) {\n            tView.staticContentQueries = true;\n        }\n    }\n    function loadContentQuery() {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        var index = getCurrentQueryIndex();\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], index);\n        setCurrentQueryIndex(index + 1);\n        return lView[CONTENT_QUERIES][index];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf$1,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵallocHostVars': allocHostVars,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵelementContainerStart': elementContainerStart,\n        'ɵelementContainerEnd': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵcomponentHostSyntheticProperty': componentHostSyntheticProperty,\n        'ɵcomponentHostSyntheticListener': componentHostSyntheticListener,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵviewQuery': viewQuery,\n        'ɵstaticViewQuery': staticViewQuery,\n        'ɵstaticContentQuery': staticContentQuery,\n        'ɵloadViewQuery': loadViewQuery,\n        'ɵcontentQuery': contentQuery,\n        'ɵloadContentQuery': loadContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementHostAttrs': elementHostAttrs,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵflushHooksUpTo': flushHooksUpTo,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18n': i18n,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵi18nPostprocess': i18nPostprocess,\n        'ɵresolveWindow': resolveWindow,\n        'ɵresolveDocument': resolveDocument,\n        'ɵresolveBody': resolveBody,\n        'ɵsetComponentScope': setComponentScope,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl,\n        'ɵsanitizeUrlOrResourceUrl': sanitizeUrlOrResourceUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing, ngModuleType);\n        modules.set(id, ngModuleType);\n    }\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = modules.get(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = modules.get(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__PRE_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$4, resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$4, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$4, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten$1(ngModule.schemas) : null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        if (ngModule.id) {\n            registerNgModuleType(ngModule.id, moduleType);\n        }\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten$1(imports.map(computeCombinedExports), resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(verifyDeclarationIsUnique);\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten$1(ngModule.imports, unwrapModuleWithProvidersImports)\n                    .forEach(verifySemanticsOfNgModuleDef);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyCorrectBootstrapType);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + renderStringify(type) + \"' declared by the module '\" + renderStringify(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + renderStringify(type) + \" from \" + renderStringify(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                var modules = [existingModule, moduleType].map(renderStringify).sort();\n                errors.push(\"Type \" + renderStringify(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + renderStringify(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + renderStringify(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + renderStringify(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(renderStringify(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten$1(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values, mapFn) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value, mapFn)));\n            }\n            else {\n                out.push(mapFn ? mapFn(value) : value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + renderStringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + renderStringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + renderStringify(type) + \"/template.html\";\n                    var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', renderStringify(type), templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY$1, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_1 + \"/ngDirectiveDef.js\";\n                    var compiler = getCompilerFacade();\n                    var facade = directiveMetadata(type, directive);\n                    facade.typeSourceSpan =\n                        compiler.createParseSourceSpan('Directive', renderStringify(type), sourceMapUrl);\n                    ngDirectiveDef = compiler.compileDirective(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY$1,\n            outputs: metadata.outputs || EMPTY_ARRAY$1,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery),\n        };\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + renderStringify(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + renderStringify(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the `Input` and `Output` decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0] || name;\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = Promise.resolve(0);\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    var isBoundToModule = isBoundToModule__PRE_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? null : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var hostProperties = collectHostPropertyBindings(tNode, lView, tData);\n                return __assign({}, properties, hostProperties);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (isClassBasedValue(stylingContext, i)) {\n                                var className = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (!isClassBasedValue(stylingContext, i)) {\n                                var styleName = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryNodeChildrenR3(parentNode, predicate, matches, elementsOnly) {\n        if (parentNode instanceof DebugElement__POST_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__POST_R3__) {\n                    if (elementsOnly ? node.nativeElement : true) {\n                        _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndex = getFirstBindingIndex(tNode.propertyMetadataStartIndex, tData);\n        while (bindingIndex < tNode.propertyMetadataEndIndex) {\n            var value = '';\n            var propMetadata = tData[bindingIndex];\n            while (!isPropMetadataString(propMetadata)) {\n                // This is the first value for an interpolation. We need to build up\n                // the full interpolation by combining runtime values in LView with\n                // the static interstitial values stored in TData.\n                value += renderStringify(lView[bindingIndex]) + tData[bindingIndex];\n                propMetadata = tData[++bindingIndex];\n            }\n            value += lView[bindingIndex];\n            // Property metadata string has 3 parts: property name, prefix, and suffix\n            var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n            var propertyName = metadataParts[0];\n            // Attr bindings don't have property names and should be skipped\n            if (propertyName) {\n                // Wrap value with prefix and suffix (will be '' for normal bindings)\n                properties[propertyName] = metadataParts[1] + value + metadataParts[2];\n            }\n            bindingIndex++;\n        }\n        return properties;\n    }\n    /**\n     * Retrieves the first binding index that holds values for this property\n     * binding.\n     *\n     * For normal bindings (e.g. `[id]=\"id\"`), the binding index is the\n     * same as the metadata index. For interpolations (e.g. `id=\"{{id}}-{{name}}\"`),\n     * there can be multiple binding values, so we might have to loop backwards\n     * from the metadata index until we find the first one.\n     *\n     * @param metadataIndex The index of the first property metadata string for\n     * this node.\n     * @param tData The data array for the current TView\n     * @returns The first binding index for this binding\n     */\n    function getFirstBindingIndex(metadataIndex, tData) {\n        var currentBindingIndex = metadataIndex - 1;\n        // If the slot before the metadata holds a string, we know that this\n        // metadata applies to an interpolation with at least 2 bindings, and\n        // we need to search further to access the first binding value.\n        var currentValue = tData[currentBindingIndex];\n        // We need to iterate until we hit either a:\n        // - TNode (it is an element slot marking the end of `consts` section), OR a\n        // - metadata string (slot is attribute metadata or a previous node's property metadata)\n        while (typeof currentValue === 'string' && !isPropMetadataString(currentValue)) {\n            currentValue = tData[--currentBindingIndex];\n        }\n        return currentBindingIndex + 1;\n    }\n    function collectHostPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        // Host binding values for a node are stored after directives on that node\n        var hostPropIndex = tNode.directiveEnd;\n        var propMetadata = tData[hostPropIndex];\n        // When we reach a value in TView.data that is not a string, we know we've\n        // hit the next node's providers and directives and should stop copying data.\n        while (typeof propMetadata === 'string') {\n            var propertyName = propMetadata.split(INTERPOLATION_DELIMITER)[0];\n            properties[propertyName] = lView[hostPropIndex];\n            propMetadata = tData[++hostPropIndex];\n        }\n        return properties;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__PRE_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_r = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_o = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_p = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_q = _localeFactory;\n    exports.ɵangular_packages_core_core_s = zoneSchedulerFactory;\n    exports.ɵangular_packages_core_core_f = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_m = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_n = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_l = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_k = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_a = NullInjector;\n    exports.ɵangular_packages_core_core_b = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_c = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_d = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_e = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_j = getModuleFactory__PRE_R3__;\n    exports.ɵangular_packages_core_core_t = wtfEnabled;\n    exports.ɵangular_packages_core_core_v = createScope;\n    exports.ɵangular_packages_core_core_u = detectWTF;\n    exports.ɵangular_packages_core_core_y = endTimeRange;\n    exports.ɵangular_packages_core_core_w = leave;\n    exports.ɵangular_packages_core_core_x = startTimeRange;\n    exports.ɵangular_packages_core_core_bb = SCHEDULER;\n    exports.ɵangular_packages_core_core_bc = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_bd = getLView;\n    exports.ɵangular_packages_core_core_be = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_bf = nextContextImpl;\n    exports.ɵangular_packages_core_core_bj = BoundPlayerFactory;\n    exports.ɵangular_packages_core_core_bo = getRootContext;\n    exports.ɵangular_packages_core_core_bn = loadInternal;\n    exports.ɵangular_packages_core_core_g = createElementRef;\n    exports.ɵangular_packages_core_core_h = createTemplateRef;\n    exports.ɵangular_packages_core_core_i = createViewRef;\n    exports.ɵangular_packages_core_core_bh = getUrlSanitizer;\n    exports.ɵangular_packages_core_core_bk = makeParamDecorator;\n    exports.ɵangular_packages_core_core_bl = makePropDecorator;\n    exports.ɵangular_packages_core_core_bp = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_z = _def;\n    exports.ɵangular_packages_core_core_ba = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ɵinject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf$1;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵsetComponentScope = setComponentScope;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵviewQuery = viewQuery;\n    exports.ɵstaticViewQuery = staticViewQuery;\n    exports.ɵstaticContentQuery = staticContentQuery;\n    exports.ɵloadViewQuery = loadViewQuery;\n    exports.ɵcontentQuery = contentQuery;\n    exports.ɵloadContentQuery = loadContentQuery;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵcomponentHostSyntheticProperty = componentHostSyntheticProperty;\n    exports.ɵcomponentHostSyntheticListener = componentHostSyntheticListener;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵallocHostVars = allocHostVars;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementContainerStart = elementContainerStart;\n    exports.ɵelementContainerEnd = elementContainerEnd;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementHostAttrs = elementHostAttrs;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵflushHooksUpTo = flushHooksUpTo;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18n = i18n;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nPostprocess = i18nPostprocess;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵresolveWindow = resolveWindow;\n    exports.ɵresolveDocument = resolveDocument;\n    exports.ɵresolveBody = resolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵdefaultStyleSanitizer = defaultStyleSanitizer;\n    exports.ɵsanitizeScript = sanitizeScript;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵsanitizeUrlOrResourceUrl = sanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}